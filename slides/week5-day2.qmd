---
title: "Midterm Project Work Day"
format: 
  revealjs:
    theme: style.scss
editor: visual
---

# Reminders About Deadlines

## Revision Deadlines

-   Lab 3 Revisions are due today (May 1)

-   Second round of revisions for Lab 2 are due today (May 1)

-   Statistical Critique revisions are due next Wednesday (May 8)

-   Lab 4 Revisions are due next Wednesday (May 8)

::: callout-caution
# Making a copy of your group's Lab 4

If you were the recorder (typer) for your group, you need to [make your project public](https://atheobold.github.io/stat-313-website/slides/week4-day2.html#copying-the-lab-last-weeks-recorder). If you were not the recorder, you need to [make a copy of your group's project](https://atheobold.github.io/stat-313-website/slides/week4-day2.html#copying-the-lab-everyone-else).
:::

## Midterm Project 

The first draft of your Midterm Project is due on [Sunday at midnight]{.underline}.

::: callout-caution
# Deadline Extension

A deadline extension [**is**]{.underline} permitted for the first draft. Deadline extensions [**are not**]{.underline} permitted for the final version (due next week).
:::

# Comments from Project Proposals

## For Every Dataset

-   [Every]{.underine} dataset is included in an R package! You need to find which package that is and load it in!

-   If your dataset is associated with a publication, that publication should be referenced in your Introduction!

## Introduction Versus Methods

-   The description of your data goes and your research question goes in your Introduction.

-   The description of your variables goes at the beginning of your Methods!

## Specific Dataset Advice

-   For the `and_vertebrates` data, you should include `species` as an explanatory variable. If you don't you are assuming the same relationship applies to trout AND salamanders.

-   For the `hbr_maples` data, you cannot use `year` as a numerical variable. There are only two years of data!

-   For the `pie_crabs` data:

    -   `size` should be the response variable
    -   `site` and `latitude` measure the [same]{.underline} thing

# Coding a Multiple Linear Regression

## Step 0 -- Read in Your Data

-   Locate what package your data live in (found in the directions for the midterm project proposal)

-   Load in the package you need!

-   Get started!

<!-- ::: columns -->

<!-- ::: {.column width="47%"} -->

<!-- STAT 313 -->

<!-- ::: small -->

<!-- -   Locate what package your data live in (found in the directions for the midterm project proposal) -->

<!-- -   Load in the package you need! -->

<!-- -   Get started! -->

<!-- ::: -->

<!-- ::: -->

<!-- ::: {.column width="3%"} -->

<!-- ::: -->

<!-- ::: {.column width="50%"} -->

<!-- STAT 513 -->

<!-- ::: small -->

<!-- -   Upload your formatted dataset to your Midterm Project on Posit Cloud -->

<!-- -   Write the following code to load in your dataset: -->

<!-- ::: -->

<!-- ::: -->

<!-- ::: -->

</br>

```{r}
#| eval: false
#| echo: true
#| code-line-numbers: false

library(openintro)
```

```{r}
#| eval: false
#| echo: false
name_you_want <- read_csv("name of your dataset.csv")

name_you_want <- read_xlsx("name of your dataset.xlsx")
```

## Step 1 -- Visualizations

::: columns
::: {.column width="47%"}
[Two Numerical Variables]{.underline}

::: callout-tip
# Three total visualizations
:::

::: small
-   Visualize the model with **both** variables -- `color` gradient
-   Visualize **two** simple linear regression models -- one for each variable
:::
:::

::: {.column width="3%"}
:::

::: {.column width="50%"}
[One Categorical & One Numerical Variable]{.underline}

::: callout-tip
# Two total visualizations
:::

::: small
-   Visualize the model using `geom_smooth(method = "lm")`
-   Visualize the model using `geom_parallel_slopes()`
:::
:::
:::

. . .

::: callout-warning
# No `theme_classic()`

I like grid lines! Please use `theme_bw()` instead!
:::

## Step 2 -- Decide the "Best" Model

::: columns
::: {.column width="45%"}
[Two Numerical Variables]{.underline}

::: {style="color: #0F4C81; font-size: 0.75em"}
-   If there appears to be a relationship with the colors -- include **both** variables!

-   If the colors are equally dispersed throughout the plot -- choose the [**one**]{.underline} variable that has the [**stronger**]{.underline} relationship (larger slope)!
:::
:::

::: {.column width="5%"}
:::

::: {.column width="45%"}
[One Categorical & One Numerical Variable]{.underline}

::: {style="color: #0F4C81; font-size: 0.75em"}
-   Look at the plot where the lines are allowed to be different! Does it look like they are?
:::
:::
:::

## Step 3 -- Fit the regression model you chose with `lm()`

::: columns
::: {.column width="45%"}
[Two Numerical Variables]{.underline}

::: {style="color: #0F4C81; font-size: 0.75em"}
-   Are both variables included? Use a `+` to separate them!

::: small
```{r}
#| eval: false
#| echo: true
#| label: two-num-model
#| code-line-numbers: false

my_model <- lm(size ~ latitude + water_temp, 
               data = pie_crab)
```
:::
:::
:::

::: {.column width="5%"}
:::

::: {.column width="45%"}
[One Categorical & One Numerical Variable]{.underline}

::: {style="color: #0F4C81; font-size: 0.65em"}
-   Are the slopes different? You need to fit a different slopes model! Use a `*` to separate the variables!

::: small
```{r}
#| eval: false
#| echo: true
#| label: interaction-model
#| code-line-numbers: false

my_model <- lm(tail_l ~ age + pop, 
               data = possum)
```
:::

-   Are the slopes similar? You need to fit a parallel slopes model! Use a `+` to separate the variables!

::: small
```{r}
#| eval: false
#| echo: true
#| label: parallel-model
#| code-line-numbers: false

my_model <- lm(weight ~ weeks + habit, 
               data = births14)
```
:::
:::
:::
:::

## Step 4: Get the coefficients with `get_regression_table()`

##  {background-color="#D4D4D4"}

::: {style="font-size: 5em; color: #000000;"}
Now interpret!
:::

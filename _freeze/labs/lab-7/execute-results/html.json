{
  "hash": "0efe1673904973155903afa8cc04b17e",
  "result": {
    "markdown": "---\ntitle: \"Lab 7: Confidence Intervals for Water Temperature and Latitude\"\nauthor: \"The names of your group members here!\"\ndate: \"May 18, 2023\"\nformat: \n  html:\n    embed-resources: true\n    standalone: true\neditor: visual\nexecute: \n  echo: true\n  eval: false\n  message: false\n  warning: false\n---\n\n\n\n\n## Data\n\nToday we will explore the `pie_crab` dataset contained in the **lterdatasampler** R package. The data is from a study by Johnson et al. at the Plum Island Ecosystem Long Term Ecological Research site, studying the relationship between the size (carapace width) of a Fiddler Crab and the geographical location of its habitat. These data can be used to investigate if Bergmann's Rule applies to Fiddler Crabs, or specifically that the size of a crab increases as the distance from the equator increases.\n\n### Motivation\n\nThe students who investigated this relationship for their midterm project found that when *both* latitude *and* water temperature are included as explanatory variables in the multiple regression model, the coefficient associated with water temperature doesn't make sense. Namely, the model suggests warmer water temperatures are associated with larger crab sizes. However, we know that the water is warmer near the equator, which is where the crab sizes should be **smaller**. Rather perplexing!\n\nThe moral of the story is that water temperature and latitude are high correlated with each other, so including them both as explanatory variables leads to *multicollinearity* -- something we **do not** want in our multiple linear regression.\n\n### Our Investigation\n\nThe focus of this lab is on quantifying the relationship between water temperature (response) and latitude (explanatory) for marshes (sites) along the Atlantic coast.\n\n## Cleaning the Data\n\nThe data contains information on at total of 392 Fiddler Crabs caught at 13 marshes on the Atlantic coast of the United States in summer 2016. However, at each marsh, there is only **one** recorded water temperature. Meaning, we need to collapse our dataset to have only **one** observation per latitude (marsh).\n\n**1. Fill in the code below to create a new dataset called `pie_crab_clean` which has 13 observations -- one per latitude / marsh.**\n\n\n::: {.cell}\n\n```{.r .cell-code}\npie_crab_clean <- pie_crab %>% \n  group_by(____) %>% \n  slice_sample(n = 1) %>% \n  ungroup()\n```\n:::\n\n\n**From this point forward, you should use the `pie_crab_clean` dataset for EVERY problem.** Keep in mind that you are no longer analyzing data on crabs! The dataset you have is on marshes along the Atlantic coast!\n\n## Visualizing Relationships\n\n**2. Create a scatterplot modeling the relationship between latitude (explanatory) and water temperature (response) for these 13 marshes.**\n\n*Don't forget to add descriptive axis labels!*\n\n\n::: {.cell}\n\n:::\n\n\n**3. Describe the relationship you see in the scatterplot. Be sure to address the four aspects we discussed in class: form, direction, strength, and unusual points!** Keep in mind that you are no longer analyzing data on crabs! The dataset you have is on marshes along the Atlantic coast!\n\n### Summarizing the Relationships\n\nNow that you've visualized the relationship, let's summarize this relationship with some statistics. As we discussed in Week 4, there are two statistics you can use to summarize a linear relationship:\n\n1.  the correlation\n2.  the slope\n\nLet's calculate both!\n\n**4. Use the `get_correlation()` function to calculate the correlation between the water temperature and latitude for these 13 marshes.**\n\n\n::: {.cell}\n\n:::\n\n\n**5. Fill in the code below to calculate the observed slope for the relationship between the water temperature (response) and latitude (explanatory).**\n\n*Note: Nothing will be output when you run this code!* \n\n::: {.cell}\n\n```{.r .cell-code}\nobs_slope <- pie_crab_clean %>% \n  specify(response = ____, \n          explanatory = ____) %>% \n  calculate(stat = ____)\n```\n:::\n\n\n## Bootstrap Distribution\n\nNow that we have the observed slope statistic, let's see what variability we might get in the slope statistic for other samples (marshes) we might have gotten from the population (the Atlantic coast of the US).\n\nAs a refresher, when we use resampling to obtain our bootstrap distribution, our steps look like the following:\n\nStep 1: `specify()` the response and explanatory variables\n\nStep 2: `generate()` lots of bootstrap resamples\n\nStep 3: `calculate()` for each of the `generated()` samples, calculate the statistic you are interested in\n\nLet's give this a try!\n\n**6. Fill in the code to generate 500 bootstrap slope statistics (from 500 bootstrap resamples).**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbootstrap <- pie_crab_clean %>% \n  specify(response = ____, \n          explanatory = ____) %>% \n  generate(reps = ____, \n           type = ____) %>% \n  calculate(stat = ____)\n```\n:::\n\n\nAlright, now that we have the bootstrap slope statistics, let's see what it looks like! Let's use the `visualize()` function (not `ggplot()`!) to make a quick visualization of the statistics you calculated above.\n\n**7. Use the `visualize()` function to create a simple histogram of your 500 bootstrap statistics.**\n\n*It would be nice to change the x-axis label to describe what statistic is being plotted!*\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Code to visualize bootstrap statistics\n```\n:::\n\n\n## Confidence Interval\n\nThe next step to obtain our confidence interval! First we need to determine what percentage of statistics we want to keep in the confidence interval. 90%? 95%? 99%? 80%?\n\nThis seems like a study where we care a bit less about our interval capturing the true value, at least compared to something like a medical study. So, I think this could be a great instance to use an 85% confidence interval.\n\n**8. Use the `get_confidence_interval()` function to find the 85% confidence interval from your bootstrap distribution, using the percentile method!**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Code to obtain a 85% PERCENTILE based confidence interval\n```\n:::\n\n\n**9. Interpret the confidence interval you obtained in #8. Make sure to include the context of the data and the population of interest!**\n\nJust for fun, let's compare the confidence we obtained using a percentile method with an interval found using the SE method.\n\n**10. Use the `get_confidence_interval()` function to find the 85% confidence interval from your bootstrap distribution, using the SE method!**\n\n*Remember -- with the SE method, you need to specify the point estimate!*\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Code to obtain a 85% SE based confidence interval\n```\n:::\n\n\n**11. How do your confidence intervals compare? Based on the shape of the bootstrap distribution, would you expect for these methods to yield similar results?**\n\n*Hint: Think about the conditions for using the SE method to obtain a confidence interval!*\n\n## Bootstrap Assumptions\n\nA bootstrap distribution aims to simulate the variability we'd get from other samples from our population. However, the accuracy of these samples relies on the quality of our original sample.\n\n**12. Based on the information given, how do you feel about the assumption a bootstrap distribution makes about the original sample? What issues do you believe might prevent this assumption being appropriate?**\n",
    "supporting": [
      "lab-7_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
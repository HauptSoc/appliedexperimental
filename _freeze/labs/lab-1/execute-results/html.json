{
  "hash": "cc96ff60f1d0c7ddcba627ac7bb24016",
  "result": {
    "markdown": "---\ntitle: \"Welcome to RStudio Cloud!\"\nauthor: \"Your Name Here!\"\ndate: \"January 12, 2023\"\nformat: html\nembed-resources: true\nstandalone: true\neditor: visual\nexecute: \n  echo: true\n---\n\n\n## Quarto\n\nThis is a Quarto document.\n\nQuarto is a software that allows you to interweave text and R code to create HTML, PDF, and Microsoft Word documents\n\nThe document may look a bit different that you are used to, but we will break it down!\n\nSection headers are defined with hashtags (#), where one \\# is the largest header, two \\## is the second largest and so on.\n\nYou can make words boldface with two \\*\\* or two \\_\\_ (like **so** or **so**).\n\nYou can make words italicized with one \\* or one \\_ (like *so* or *so*).\n\nYou can make lists like so:\n\n-   item 1\n-   item 2\n-   item 3\n\n<!-- This is an comment. It WILL NOT show in your knitted document. -->\n\n\n```{=html}\n<!-- Comments are great ways to leave yourself notes inside your Quarto\ndocument that no one can see!  -->\n```\n\n## R Code\n\nYou can differentiate the R code within a Quarto file from the body of the document, from the three tick marks (\\`\\`\\`) they start and end with.\n\nHere is an example of an R code chunk:\n\n\n\n\n\nNotice that after the \\`\\`\\` you see a curly brace with an \"r\" in it ({r}), this indicates to Quarto that the code inside of that code chunk is R code (not Python code or another type of code).\n\nAlso, the \"packages\" after the \"r\" is the code chunk's name. It is good practice to name your code chunks based on the action they perform. It makes it easier to navigate to them in the navigation pane.\n\n## Rendering\n\nWhen you click the **Render** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document.\n\n**Question 1:** Do you see the above code chunk when you knit the document? Why do you think this is the case?\n\n## Including Code Output\n\nYou can include code output in your knitted document:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(mpg)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 234\nColumns: 11\n$ manufacturer <chr> \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"…\n$ model        <chr> \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4 quattro\", \"…\n$ displ        <dbl> 1.8, 1.8, 2.0, 2.0, 2.8, 2.8, 3.1, 1.8, 1.8, 2.0, 2.0, 2.…\n$ year         <int> 1999, 1999, 2008, 2008, 1999, 1999, 2008, 1999, 1999, 200…\n$ cyl          <int> 4, 4, 4, 4, 6, 6, 6, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 8, 8, …\n$ trans        <chr> \"auto(l5)\", \"manual(m5)\", \"manual(m6)\", \"auto(av)\", \"auto…\n$ drv          <chr> \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"4\", \"4\", \"4\", \"4\", \"4…\n$ cty          <int> 18, 21, 20, 21, 16, 18, 18, 18, 16, 20, 19, 15, 17, 17, 1…\n$ hwy          <int> 29, 29, 31, 30, 26, 26, 27, 26, 25, 28, 27, 25, 25, 25, 2…\n$ fl           <chr> \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p…\n$ class        <chr> \"compact\", \"compact\", \"compact\", \"compact\", \"compact\", \"c…\n```\n:::\n:::\n\n\n**Question 2:** What do you think the above code does? What output does it give you?\n\n## Including Plots\n\nYou can also embed plots in the knitted document.\n\nHere is an example of a plot.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](lab-1_files/figure-html/pressure-1.png){width=672}\n:::\n:::\n\n\n**Question 3**: What do you think the `echo: false` option does in the above code chunk?\n\n**Question 4:** What do you think the `mapping = aes(y = manufacturer, x = hwy))` code does?\n\n**Question 5:** What do you think the `labs(x = \"Highway Miles Per Gallon\", y = \"Car Manufacturer\")` code does?\n",
    "supporting": [
      "lab-1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
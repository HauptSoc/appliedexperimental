{
  "hash": "771b3110cd86b7d1400d54888f9a31b8",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Two-Way ANOVA -- A Brief Introduction\"\noutput: \n  learnr::tutorial:\n    progressive: true\n    allow_skip: true\nruntime: shiny_prerendered\n---\n\n\n\n\n## Two-way ANOVA\n\nA two-way ANOVA extends the one-way ANOVA to situations with two categorical explanatory variables. This new methods allows researchers to simultaneously study two variables that might explain variability in the responses and explore whether the impacts of one explanatory variable change depending on the level of the other explanatory variable.\n\nIn a clinical trials context, it is well known that certain factors can change the performance of certain drugs. For example, different dosages of a drug might have different benefits or side-effects on men, versus women or children or even for different age groups in adults. When the impact of one factor on the response changes depending on the level of another factor, we say that the two explanatory variables **interact**.\n\nIt is also possible for both explanatory variables to be related to differences in the mean responses and not interact. For example, suppose there are differences in how younger and older subjects respond to a drug, and there are differences in how all individuals respond to different dosages of a drug, but the effect of increasing the dosage is the same for both young and old subjects. This is an example of what is called an **additive** type of model.\n\nIn general, the world is more complicated than the single factor models we've considered, especially in observational studies, so these models allow us to start to handle more realistic situations.\n\n## Visualizing a Two-Way ANOVA\n\nThe visualizations we created for a one-way ANOVA are still relevant here, but we need to figure out how to add a second categorical explanatory variable to our plots.\n\nSimilar to the multivariate plots we've talked about previously, there are two main ways to add a second categorical variable to our plots:\n\n1.  colors\n2.  facets\n\nWe'll explore both below!\n\n## \n\nBelow is a plot of the relationship between body mass and species for penguins in the Palmer Archipelago.\n\nThe year the data were collected was modified to a categorical variable, named `year_cat`. Change to code below to `fill` the density ridges with the `year_cat` variable.\n\n\n::: {.cell layout-align=\"center\" exercise='true'}\n<div class=\"tutorial-exercise\" data-label=\"colors\" data-completion=\"1\" data-diagnostics=\"1\" data-startover=\"1\" data-lines=\"0\" data-pipe=\"|&gt;\">\n\n```{.r .cell-code}\npenguins %>% \n  ggplot(aes(y = species, x = body_mass_g, fill = ___)) + \n  geom_density_ridges()\n```\n\n<script type=\"application/json\" data-ui-opts=\"1\">{\"engine\":\"r\",\"has_checker\":false,\"caption\":\"<span data-i18n=\\\"text.enginecap\\\" data-i18n-opts=\\\"{&quot;engine&quot;:&quot;R&quot;}\\\">R Code<\\/span>\"}</script></div>\n:::\n\n::: {.cell layout-align=\"center\"}\n<div class=\"tutorial-exercise-support\" data-label=\"colors-solution\" data-completion=\"1\" data-diagnostics=\"1\" data-startover=\"1\" data-lines=\"0\" data-pipe=\"|&gt;\">\n\n```{.r .cell-code}\nggplot(aes(y = species, x = body_mass_g, fill = year_cat)) \n```\n\n</div>\n:::\n\n\n## \n\nNow, take the same plot and instead of coloring by `year_cat` use facets to separate the different sampling years.\n\n\n::: {.cell layout-align=\"center\" exercise='true'}\n<div class=\"tutorial-exercise\" data-label=\"facets\" data-completion=\"1\" data-diagnostics=\"1\" data-startover=\"1\" data-lines=\"0\" data-pipe=\"|&gt;\">\n\n```{.r .cell-code}\npenguins %>% \n  ggplot(aes(y = species, x = body_mass_g)) + \n  geom_density_ridges() + \n  ___\n```\n\n<script type=\"application/json\" data-ui-opts=\"1\">{\"engine\":\"r\",\"has_checker\":false,\"caption\":\"<span data-i18n=\\\"text.enginecap\\\" data-i18n-opts=\\\"{&quot;engine&quot;:&quot;R&quot;}\\\">R Code<\\/span>\"}</script></div>\n:::\n\n\n::: {#facets-hint}\n**Hint:** Add `~ year_cat` to `facet_wrap()` to create year facets.\n:::\n\n\n::: {.cell layout-align=\"center\"}\n<div class=\"tutorial-exercise-support\" data-label=\"facets-solution\" data-completion=\"1\" data-diagnostics=\"1\" data-startover=\"1\" data-lines=\"0\" data-pipe=\"|&gt;\">\n\n```{.r .cell-code}\npenguins %>% \n  ggplot(aes(y = species, x = body_mass_g)) + \n  geom_density_ridges() + \n  facet_wrap(~ year_cat)\n```\n\n</div>\n:::\n\n\n## Additive versus Interactive Models\n\nAs was mentioned in the Introduction, there are two different types of two-way ANOVA models. Similar to a multiple linear regression, the two explanatory variables could have their own impact on the response (similar to a parallel slopes regression model). Or, the relationship between one explanatory variable and the response could differ based on another explanatory variable (similar to a different slopes regression model).\n\nThese two types of models are called an **additive** two-way ANOVA model or an **interaction** two-way ANOVA model. Similar to how we decided which model to choose in a multiple linear regression, we will use visualizations to guide us.\n\n## \n\nWhen deciding if an interaction model is a good fit for the data, we look to see if the relationship between one categorical variable and the response differs based on the level of the other response variable.\n\nHere, we look at the relationship between `year` and `body_mass_g` and see if it differs based on the `species` of the penguin. To me, the easiest way to assess if this is the case is to `fill` the density plots with color for the different years:\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](week-10_files/figure-html/unnamed-chunk-1-1.png){fig-align='center' width=480}\n:::\n:::\n\n\nNow that I have the plot, I compare the \"profile\" of the density ridges (the combo of the pink, green, and blue) between the species. If the relationship between `year` and `body_mass_g` changed based on the `species`, then we would see very different profiles. Note, I'm not paying attention to *where* the profiles are located along the x-axis, I'm simply looking at the density ridges as individual pictures to be compared.\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![ ](images/dist1.png){fig-align='center' width=30% height=20%}\n:::\n\n::: {.cell-output-display}\n![ ](images/dist2.png){fig-align='center' width=30% height=20%}\n:::\n\n::: {.cell-output-display}\n![ ](images/dist3.png){fig-align='center' width=30% height=20%}\n:::\n:::\n\n\nLooking at the profiles above, removed from the context of the plot, does it seem that these profiles very similar? Or does it seem that these are different pictures? I didn't think so, since it seems like in all three pictures there is about the same overlap between the three colors. However, we can use a two-way ANOVA interaction model to see if my intuition is right.\n\n## Conditions of a Two-Way ANOVA Model\n\nThe two-way ANOVA model has the same conditions as its one-way counterpart, however, we now have one more variable to construct our groups from.\n\n**Independence**\n\nFor both categorical variables:\n\n-   observations across groups need to be independent\n\n-   observations within each group need to be independent\n\n**Equal Variance**: the variability of each group is similar to the others.\n\n::: callout-note\n# Intersectional groups\n\nThis is an assumption about the groups at the intersection of each categorical variable (e.g. Gentoo penguins captured in 2007). This assumption is fairly robust, but large differences in variability will cause issues.\n:::\n\n**Normal Distribution**: the responses of each group need to be approximately Normal.\n\n::: callout-note\n# Intersectional distributions\n\nThis is an assumption about the groups at the intersection of each categorical variable (e.g. Gentoo penguins captured in 2007). This assumption is also fairly robust, but influential outliers and the sample sizes of the groups should be noted when assessing.\n:::\n\n## \n\nYour turn!\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"panel panel-default tutorial-question-container\">\n<div data-label=\"quiz_1\" class=\"tutorial-question panel-body\">\n<div id=\"quiz_1-answer_container\" class=\"shiny-html-output\"></div>\n<div id=\"quiz_1-message_container\" class=\"shiny-html-output\"></div>\n<div id=\"quiz_1-action_button_container\" class=\"shiny-html-output\"></div>\n<script>if (Tutorial.triggerMathJax) Tutorial.triggerMathJax()</script>\n</div>\n</div>\n```\n\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"panel panel-default tutorial-question-container\">\n<div data-label=\"quiz_2\" class=\"tutorial-question panel-body\">\n<div id=\"quiz_2-answer_container\" class=\"shiny-html-output\"></div>\n<div id=\"quiz_2-message_container\" class=\"shiny-html-output\"></div>\n<div id=\"quiz_2-action_button_container\" class=\"shiny-html-output\"></div>\n<script>if (Tutorial.triggerMathJax) Tutorial.triggerMathJax()</script>\n</div>\n</div>\n```\n\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](week-10_files/figure-html/unnamed-chunk-3-1.png){fig-align='center' width=480}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"panel panel-default tutorial-question-container\">\n<div data-label=\"quiz_3\" class=\"tutorial-question panel-body\">\n<div id=\"quiz_3-answer_container\" class=\"shiny-html-output\"></div>\n<div id=\"quiz_3-message_container\" class=\"shiny-html-output\"></div>\n<div id=\"quiz_3-action_button_container\" class=\"shiny-html-output\"></div>\n<script>if (Tutorial.triggerMathJax) Tutorial.triggerMathJax()</script>\n</div>\n</div>\n```\n\n:::\n:::\n\n\n## Fitting a Two-Way ANOVA Model\n\nThe `R` code to fit a two-way ANOVA model is very similar to a one-way ANOVA model. We use the `aov()` (analysis of variance) function, but now we will have two categorical explanatory variables.\n\nFirst, we'll fit an interaction two-way ANOVA model to see if the relationship between year and body mass differs based on species of penguins.\n\n-   Similar to different slopes model, `*` is the symbol we use to fit an *interaction* model.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\naov(body_mass_g ~ species * year_cat, \n    data = penguins) %>% \n  tidy()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 6\n  term                df      sumsq    meansq statistic   p.value\n  <chr>            <dbl>      <dbl>     <dbl>     <dbl>     <dbl>\n1 species              2 146864214. 73432107.  340.      3.16e-81\n2 year_cat             2     26661.    13330.    0.0618  9.40e- 1\n3 species:year_cat     4    575055.   143764.    0.666   6.16e- 1\n4 Residuals          333  71841768.   215741.   NA      NA       \n```\n\n\n:::\n:::\n\n\n</br>\n\nWe notice that the interaction line (`species:year_cat`) has a small F-statistic 0.666 and a large p-value 0.616. This would lead for us to conclude that there is not an interaction between these two variables, or that the relationship between the mean body mass and year does not differ based on penguin species. As suspected!\n\n## \n\nAn additive model seems like a better choice. Modify the code from the interaction model to fit an additive model instead.\n\n\n::: {.cell layout-align=\"center\" exercise='true'}\n<div class=\"tutorial-exercise\" data-label=\"additive\" data-completion=\"1\" data-diagnostics=\"1\" data-startover=\"1\" data-lines=\"0\" data-pipe=\"|&gt;\">\n\n```{.r .cell-code}\naov(body_mass_g ~ species * year_cat, data = penguins) %>% \n  tidy()\n```\n\n<script type=\"application/json\" data-ui-opts=\"1\">{\"engine\":\"r\",\"has_checker\":false,\"caption\":\"<span data-i18n=\\\"text.enginecap\\\" data-i18n-opts=\\\"{&quot;engine&quot;:&quot;R&quot;}\\\">R Code<\\/span>\"}</script></div>\n:::\n\n\n::: {#additive-hint}\n**Hint:** We used a `+` sign to fit an additive model with regression!\n:::\n\n\n::: {.cell layout-align=\"center\"}\n<div class=\"tutorial-exercise-support\" data-label=\"additive-solution\" data-completion=\"1\" data-diagnostics=\"1\" data-startover=\"1\" data-lines=\"0\" data-pipe=\"|&gt;\">\n\n```{.r .cell-code}\naov(body_mass_g ~ species + year_cat, data = penguins) %>% \n  tidy()\n```\n\n</div>\n:::\n\n\n</br>\n\nBased on the ANOVA table above, what would you conclude for the relationship between body mass and species and the relationship between body mass and sampling year?\n\n## Model Conclusions\n\nIn this context, the ANOVA table allows for use to test two hypotheses:\n\n1.  whether the mean body mass for every year are equal\n2.  whether the mean body mass for every species are equal\n\nAgain, similar to a multiple regression, the interpretation of these tests is *conditional* on the other variable in the model.\n\n## \n\nBased on the ANOVA table below, with a p-value of 0.94 at an $\\alpha$ of 0.05, we would conclude that, after accounting for the species of penguin, there is insufficient evidence that at least one year of capture has a different mean body mass.\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 6\n  term         df      sumsq    meansq statistic   p.value\n  <chr>     <dbl>      <dbl>     <dbl>     <dbl>     <dbl>\n1 species       2 146864214. 73432107.  342.      8.40e-82\n2 year_cat      2     26661.    13330.    0.0620  9.40e- 1\n3 Residuals   337  72416822.   214887.   NA      NA       \n```\n\n\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"panel panel-default tutorial-question-container\">\n<div data-label=\"quiz_4\" class=\"tutorial-question panel-body\">\n<div id=\"quiz_4-answer_container\" class=\"shiny-html-output\"></div>\n<div id=\"quiz_4-message_container\" class=\"shiny-html-output\"></div>\n<div id=\"quiz_4-action_button_container\" class=\"shiny-html-output\"></div>\n<script>if (Tutorial.triggerMathJax) Tutorial.triggerMathJax()</script>\n</div>\n</div>\n```\n\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"panel panel-default tutorial-question-container\">\n<div data-label=\"quiz_5\" class=\"tutorial-question panel-body\">\n<div id=\"quiz_5-answer_container\" class=\"shiny-html-output\"></div>\n<div id=\"quiz_5-message_container\" class=\"shiny-html-output\"></div>\n<div id=\"quiz_5-action_button_container\" class=\"shiny-html-output\"></div>\n<script>if (Tutorial.triggerMathJax) Tutorial.triggerMathJax()</script>\n</div>\n</div>\n```\n\n:::\n:::\n\n\n**Submit a screenshot of the final page of this tutorial to the Week 10 R tutorial assignment!**\n\npreserve3d1027ae17a4e00e\npreservef4167329886523f9\npreserve5207d1cc0fa2bd3f\npreservef0ca2b7e7970478d\npreserve0a0854b6bd422d1a\npreserve7101715fd807404b\npreserve5402bf952530b2b1\npreserve0f2070cf6ca3853b\npreserve4161e04da373f206\npreserved7637c1500bbb178\npreservece12161a64474e50\npreservec425c8e9a424ab9a\npreserve2a75eed73d329dc8\npreserve347b3d9d9361595b\npreserve6f3058d547dd3880\npreserve94cf38c41a99e2ba\npreserve27f11fbc8f468c9a\n\n<!--html_preserve-->\n<script type=\"application/shiny-prerendered\" data-context=\"dependencies\">\n{\"type\":\"list\",\"attributes\":{},\"value\":[{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"jquery\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"3.6.0\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"lib/3.6.0\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"jquery-3.6.0.min.js\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"jquerylib\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.1.4\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"font-awesome\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"6.4.2\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"fontawesome\"]}]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"css/all.min.css\",\"css/v4-shims.min.css\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"fontawesome\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.5.2\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"bootbox\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"5.5.2\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"lib/bootbox\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"bootbox.min.js\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"learnr\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.11.5\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"idb-keyvalue\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"3.2.0\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"lib/idb-keyval\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"idb-keyval-iife-compat.min.js\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"learnr\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[false]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.11.5\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"tutorial\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.11.5\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"lib/tutorial\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"tutorial.js\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"tutorial.css\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"learnr\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.11.5\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"ace\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"1.10.1\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"lib/ace\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"ace.js\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"learnr\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.11.5\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"clipboardjs\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"2.0.10\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"lib/clipboardjs\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"clipboard.min.js\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"learnr\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.11.5\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"ace\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"1.10.1\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"lib/ace\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"ace.js\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"learnr\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.11.5\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"clipboardjs\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"2.0.10\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"lib/clipboardjs\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"clipboard.min.js\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"learnr\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.11.5\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"ace\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"1.10.1\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"lib/ace\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"ace.js\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"learnr\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.11.5\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"clipboardjs\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"2.0.10\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"lib/clipboardjs\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"clipboard.min.js\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"learnr\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.11.5\"]}]}]}\n</script>\n<!--/html_preserve-->\n<!--html_preserve-->\n<script type=\"application/shiny-prerendered\" data-context=\"execution_dependencies\">\n{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"packages\"]}},\"value\":[{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"packages\",\"version\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"data.frame\"]},\"row.names\":{\"type\":\"integer\",\"attributes\":{},\"value\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"airports\",\"backports\",\"base\",\"broom\",\"checkmate\",\"cherryblossom\",\"cli\",\"colorspace\",\"commonmark\",\"compiler\",\"datasets\",\"digest\",\"dplyr\",\"ellipsis\",\"evaluate\",\"fansi\",\"farver\",\"fastmap\",\"fontawesome\",\"forcats\",\"generics\",\"ggplot2\",\"ggridges\",\"glue\",\"graphics\",\"grDevices\",\"grid\",\"gridExtra\",\"gtable\",\"hms\",\"htmltools\",\"htmlwidgets\",\"httpuv\",\"infer\",\"jquerylib\",\"jsonlite\",\"knitr\",\"labeling\",\"later\",\"learnr\",\"lifecycle\",\"lubridate\",\"magrittr\",\"markdown\",\"methods\",\"mime\",\"munsell\",\"openintro\",\"palmerpenguins\",\"pillar\",\"pkgconfig\",\"promises\",\"purrr\",\"R6\",\"Rcpp\",\"readr\",\"rlang\",\"rmarkdown\",\"rprojroot\",\"rstudioapi\",\"scales\",\"shiny\",\"stats\",\"stringi\",\"stringr\",\"tibble\",\"tidyr\",\"tidyselect\",\"tidyverse\",\"timechange\",\"tools\",\"tzdb\",\"usdata\",\"utf8\",\"utils\",\"vctrs\",\"withr\",\"xfun\",\"xtable\",\"yaml\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.1.0\",\"1.4.1\",\"4.3.1\",\"1.0.5\",\"2.3.1\",\"0.1.0\",\"3.6.2\",\"2.1-0\",\"1.9.0\",\"4.3.1\",\"4.3.1\",\"0.6.33\",\"1.1.4\",\"0.3.2\",\"0.23\",\"1.0.6\",\"2.1.1\",\"1.1.1\",\"0.5.2\",\"1.0.0\",\"0.1.3\",\"3.4.4\",\"0.5.5\",\"1.6.2\",\"4.3.1\",\"4.3.1\",\"4.3.1\",\"2.3\",\"0.3.4\",\"1.1.3\",\"0.5.7\",\"1.6.4\",\"1.6.13\",\"1.0.5\",\"0.1.4\",\"1.8.8\",\"1.45\",\"0.4.3\",\"1.3.2\",\"0.11.5\",\"1.0.4\",\"1.9.3\",\"2.0.3\",\"1.12\",\"4.3.1\",\"0.12\",\"0.5.0\",\"2.4.0\",\"0.1.1\",\"1.9.0\",\"2.0.3\",\"1.2.1\",\"1.0.2\",\"2.5.1\",\"1.0.11\",\"2.1.4\",\"1.1.2\",\"2.25\",\"2.0.4\",\"0.15.0\",\"1.3.0\",\"1.8.0\",\"4.3.1\",\"1.8.3\",\"1.5.1\",\"3.2.1\",\"1.3.0\",\"1.2.0\",\"2.0.0\",\"0.2.0\",\"4.3.1\",\"0.4.0\",\"0.2.0\",\"1.2.4\",\"4.3.1\",\"0.6.5\",\"2.5.2\",\"0.41\",\"1.8-4\",\"2.3.8\"]}]}]}\n</script>\n<!--/html_preserve-->",
    "supporting": [
      "week-10_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {
      "preserve0a0854b6bd422d1a": "\n<script type=\"application/shiny-prerendered\" data-context=\"server\">\nsession$onSessionEnded(function() {\n        learnr:::event_trigger(session, \"session_stop\")\n      })\n</script>\n",
      "preserve0f2070cf6ca3853b": "\n<script type=\"application/shiny-prerendered\" data-context=\"server\">\n`tutorial-exercise-facets-result` <- learnr:::setup_exercise_handler(reactive(req(input$`tutorial-exercise-facets-code-editor`)), session)\noutput$`tutorial-exercise-facets-output` <- renderUI({\n  `tutorial-exercise-facets-result`()\n})\n</script>\n",
      "preserve27f11fbc8f468c9a": "\n<script type=\"application/shiny-prerendered\" data-context=\"server-extras\">\nojs_define <- function(..., .session = shiny::getDefaultReactiveDomain()) {\n  quos <- rlang::enquos(...)\n  vars <- rlang::list2(...)\n  nm <- names(vars)\n  if (is.null(nm)) {\n    nm <- rep_len(\"\", length(vars))\n  }\n  mapply(function(q, nm, val) {\n    # Infer name, if possible\n    if (nm == \"\") {\n      tryCatch({\n        nm <- rlang::as_name(q)\n      }, error = function(e) {\n        code <- paste(collapse = \"\\n\", deparse(rlang::f_rhs(q)))\n        stop(\"ojs_define() could not create a name for the argument: \", code)\n      })\n    }\n    .session$output[[nm]] <- val\n    outputOptions(.session$output, nm, suspendWhenHidden = FALSE)\n    .session$sendCustomMessage(\"ojs-export\", list(name = nm))\n    NULL\n  }, quos, nm, vars, SIMPLIFY = FALSE, USE.NAMES = FALSE)\n  invisible()\n}\n</script>\n",
      "preserve2a75eed73d329dc8": "\n<script type=\"application/shiny-prerendered\" data-context=\"server\">\n`tutorial-exercise-additive-result` <- learnr:::setup_exercise_handler(reactive(req(input$`tutorial-exercise-additive-code-editor`)), session)\noutput$`tutorial-exercise-additive-output` <- renderUI({\n  `tutorial-exercise-additive-result`()\n})\n</script>\n",
      "preserve347b3d9d9361595b": "\n<script type=\"application/shiny-prerendered\" data-context=\"server\">\nlearnr:::store_exercise_cache(structure(list(label = \"additive\", global_setup = structure(c(\"knitr::opts_chunk$set(fig.align = \\\"center\\\", \", \n\"                      fig.height = 3, \", \"                      fig.width = 5,\", \n\"                      echo = FALSE, \", \"                      message = FALSE, \", \n\"                      warning = FALSE)\", \"\", \"library(tidyverse) \", \n\"library(palmerpenguins)\", \"library(gridExtra)\", \"library(ggridges)\", \n\"library(openintro)\", \"library(infer)\", \"library(learnr)\", \"library(broom)\", \n\"\", \"\", \"penguins <- penguins %>% \", \"  mutate(year_cat = as.factor(year))\", \n\"\", \"two_way_table <- aov(body_mass_g ~ species * year_cat, \", \n\"    data = penguins) %>% \", \"  tidy()\", \"\", \"two_way_add <- aov(body_mass_g ~ species + year_cat, data = penguins) %>% \", \n\"  tidy()\"), chunk_opts = list(label = \"setup\", include = FALSE)), \n    setup = NULL, chunks = list(list(label = \"additive\", code = \"aov(body_mass_g ~ species * year_cat, data = penguins) %>% \\n  tidy()\", \n        opts = list(label = \"\\\"additive\\\"\", exercise = \"TRUE\"), \n        engine = \"r\")), code_check = NULL, error_check = NULL, \n    check = NULL, solution = structure(c(\"aov(body_mass_g ~ species + year_cat, data = penguins) %>% \", \n    \"  tidy()\"), chunk_opts = list(label = \"additive-solution\", \n        include = FALSE)), tests = NULL, options = list(eval = FALSE, \n        echo = TRUE, results = \"markup\", tidy = FALSE, tidy.opts = NULL, \n        collapse = FALSE, prompt = FALSE, comment = NA, highlight = FALSE, \n        size = \"normalsize\", background = \"#F7F7F7\", strip.white = TRUE, \n        cache = 0, cache.path = \"week-10_cache/html/\", cache.vars = NULL, \n        cache.lazy = TRUE, dependson = NULL, autodep = FALSE, \n        cache.rebuild = FALSE, fig.keep = \"high\", fig.show = \"asis\", \n        fig.align = \"center\", fig.path = \"week-10_files/figure-html/\", \n        dev = \"png\", dev.args = NULL, dpi = 192, fig.ext = \"png\", \n        fig.width = 5, fig.height = 3, fig.env = \"figure\", fig.cap = NULL, \n        fig.scap = NULL, fig.lp = \"fig:\", fig.subcap = NULL, \n        fig.pos = \"\", out.width = 480, out.height = NULL, out.extra = NULL, \n        fig.retina = 2, external = TRUE, sanitize = FALSE, interval = 1, \n        aniopts = \"controls,loop\", warning = FALSE, error = FALSE, \n        message = FALSE, render = NULL, ref.label = NULL, child = NULL, \n        engine = \"r\", split = FALSE, include = TRUE, purl = TRUE, \n        fig.asp = NULL, fenced.echo = FALSE, ft.shadow = FALSE, \n        label = \"additive\", exercise = TRUE, original.params.src = \"r additive, exercise = TRUE\", \n        chunk.echo = FALSE, code = c(\"aov(body_mass_g ~ species * year_cat, data = penguins) %>% \", \n        \"  tidy()\"), out.width.px = 480, out.height.px = 288, \n        params.src = \"r additive, exercise = TRUE\", fig.num = 0, \n        exercise.df_print = \"default\", exercise.checker = \"NULL\"), \n    engine = \"r\", version = \"4\"), class = c(\"r\", \"tutorial_exercise\"\n)))\n</script>\n",
      "preserve3d1027ae17a4e00e": "\n<script type=\"application/shiny-prerendered\" data-context=\"server-start\">\nknitr::opts_chunk$set(fig.align = \"center\", \n                      fig.height = 3, \n                      fig.width = 5,\n                      echo = FALSE, \n                      message = FALSE, \n                      warning = FALSE)\n\nlibrary(tidyverse) \nlibrary(palmerpenguins)\nlibrary(gridExtra)\nlibrary(ggridges)\nlibrary(openintro)\nlibrary(infer)\nlibrary(learnr)\nlibrary(broom)\n\n\npenguins <- penguins %>% \n  mutate(year_cat = as.factor(year))\n\ntwo_way_table <- aov(body_mass_g ~ species * year_cat, \n    data = penguins) %>% \n  tidy()\n\ntwo_way_add <- aov(body_mass_g ~ species + year_cat, data = penguins) %>% \n  tidy()\n</script>\n",
      "preserve4161e04da373f206": "\n<script type=\"application/shiny-prerendered\" data-context=\"server\">\nlearnr:::store_exercise_cache(structure(list(label = \"facets\", global_setup = structure(c(\"knitr::opts_chunk$set(fig.align = \\\"center\\\", \", \n\"                      fig.height = 3, \", \"                      fig.width = 5,\", \n\"                      echo = FALSE, \", \"                      message = FALSE, \", \n\"                      warning = FALSE)\", \"\", \"library(tidyverse) \", \n\"library(palmerpenguins)\", \"library(gridExtra)\", \"library(ggridges)\", \n\"library(openintro)\", \"library(infer)\", \"library(learnr)\", \"library(broom)\", \n\"\", \"\", \"penguins <- penguins %>% \", \"  mutate(year_cat = as.factor(year))\", \n\"\", \"two_way_table <- aov(body_mass_g ~ species * year_cat, \", \n\"    data = penguins) %>% \", \"  tidy()\", \"\", \"two_way_add <- aov(body_mass_g ~ species + year_cat, data = penguins) %>% \", \n\"  tidy()\"), chunk_opts = list(label = \"setup\", include = FALSE)), \n    setup = NULL, chunks = list(list(label = \"facets\", code = \"penguins %>% \\n  ggplot(aes(y = species, x = body_mass_g)) + \\n  geom_density_ridges() + \\n  ___\", \n        opts = list(label = \"\\\"facets\\\"\", exercise = \"TRUE\"), \n        engine = \"r\")), code_check = NULL, error_check = NULL, \n    check = NULL, solution = structure(c(\"penguins %>% \", \"  ggplot(aes(y = species, x = body_mass_g)) + \", \n    \"  geom_density_ridges() + \", \"  facet_wrap(~ year_cat)\"), chunk_opts = list(\n        label = \"facets-solution\", include = FALSE)), tests = NULL, \n    options = list(eval = FALSE, echo = TRUE, results = \"markup\", \n        tidy = FALSE, tidy.opts = NULL, collapse = FALSE, prompt = FALSE, \n        comment = NA, highlight = FALSE, size = \"normalsize\", \n        background = \"#F7F7F7\", strip.white = TRUE, cache = 0, \n        cache.path = \"week-10_cache/html/\", cache.vars = NULL, \n        cache.lazy = TRUE, dependson = NULL, autodep = FALSE, \n        cache.rebuild = FALSE, fig.keep = \"high\", fig.show = \"asis\", \n        fig.align = \"center\", fig.path = \"week-10_files/figure-html/\", \n        dev = \"png\", dev.args = NULL, dpi = 192, fig.ext = \"png\", \n        fig.width = 5, fig.height = 3, fig.env = \"figure\", fig.cap = NULL, \n        fig.scap = NULL, fig.lp = \"fig:\", fig.subcap = NULL, \n        fig.pos = \"\", out.width = 480, out.height = NULL, out.extra = NULL, \n        fig.retina = 2, external = TRUE, sanitize = FALSE, interval = 1, \n        aniopts = \"controls,loop\", warning = FALSE, error = FALSE, \n        message = FALSE, render = NULL, ref.label = NULL, child = NULL, \n        engine = \"r\", split = FALSE, include = TRUE, purl = TRUE, \n        fig.asp = NULL, fenced.echo = FALSE, ft.shadow = FALSE, \n        label = \"facets\", exercise = TRUE, original.params.src = \"r facets, exercise = TRUE\", \n        chunk.echo = FALSE, code = c(\"penguins %>% \", \"  ggplot(aes(y = species, x = body_mass_g)) + \", \n        \"  geom_density_ridges() + \", \"  ___\"), out.width.px = 480, \n        out.height.px = 288, params.src = \"r facets, exercise = TRUE\", \n        fig.num = 0, exercise.df_print = \"default\", exercise.checker = \"NULL\"), \n    engine = \"r\", version = \"4\"), class = c(\"r\", \"tutorial_exercise\"\n)))\n</script>\n",
      "preserve5207d1cc0fa2bd3f": "\n<script type=\"application/shiny-prerendered\" data-context=\"server\">\nlearnr:::prepare_tutorial_state(session)\n</script>\n",
      "preserve5402bf952530b2b1": "\n<script type=\"application/shiny-prerendered\" data-context=\"server\">\nlearnr:::store_exercise_cache(structure(list(label = \"colors\", global_setup = structure(c(\"knitr::opts_chunk$set(fig.align = \\\"center\\\", \", \n\"                      fig.height = 3, \", \"                      fig.width = 5,\", \n\"                      echo = FALSE, \", \"                      message = FALSE, \", \n\"                      warning = FALSE)\", \"\", \"library(tidyverse) \", \n\"library(palmerpenguins)\", \"library(gridExtra)\", \"library(ggridges)\", \n\"library(openintro)\", \"library(infer)\", \"library(learnr)\", \"library(broom)\", \n\"\", \"\", \"penguins <- penguins %>% \", \"  mutate(year_cat = as.factor(year))\", \n\"\", \"two_way_table <- aov(body_mass_g ~ species * year_cat, \", \n\"    data = penguins) %>% \", \"  tidy()\", \"\", \"two_way_add <- aov(body_mass_g ~ species + year_cat, data = penguins) %>% \", \n\"  tidy()\"), chunk_opts = list(label = \"setup\", include = FALSE)), \n    setup = NULL, chunks = list(list(label = \"colors\", code = \"penguins %>% \\n  ggplot(aes(y = species, x = body_mass_g, fill = ___)) + \\n  geom_density_ridges()\\n\", \n        opts = list(label = \"\\\"colors\\\"\", exercise = \"TRUE\"), \n        engine = \"r\")), code_check = NULL, error_check = NULL, \n    check = NULL, solution = structure(\"ggplot(aes(y = species, x = body_mass_g, fill = year_cat)) \", chunk_opts = list(\n        label = \"colors-solution\", include = FALSE)), tests = NULL, \n    options = list(eval = FALSE, echo = TRUE, results = \"markup\", \n        tidy = FALSE, tidy.opts = NULL, collapse = FALSE, prompt = FALSE, \n        comment = NA, highlight = FALSE, size = \"normalsize\", \n        background = \"#F7F7F7\", strip.white = TRUE, cache = 0, \n        cache.path = \"week-10_cache/html/\", cache.vars = NULL, \n        cache.lazy = TRUE, dependson = NULL, autodep = FALSE, \n        cache.rebuild = FALSE, fig.keep = \"high\", fig.show = \"asis\", \n        fig.align = \"center\", fig.path = \"week-10_files/figure-html/\", \n        dev = \"png\", dev.args = NULL, dpi = 192, fig.ext = \"png\", \n        fig.width = 5, fig.height = 3, fig.env = \"figure\", fig.cap = NULL, \n        fig.scap = NULL, fig.lp = \"fig:\", fig.subcap = NULL, \n        fig.pos = \"\", out.width = 480, out.height = NULL, out.extra = NULL, \n        fig.retina = 2, external = TRUE, sanitize = FALSE, interval = 1, \n        aniopts = \"controls,loop\", warning = FALSE, error = FALSE, \n        message = FALSE, render = NULL, ref.label = NULL, child = NULL, \n        engine = \"r\", split = FALSE, include = TRUE, purl = TRUE, \n        fig.asp = NULL, fenced.echo = FALSE, ft.shadow = FALSE, \n        label = \"colors\", exercise = TRUE, original.params.src = \"r colors, exercise = TRUE\", \n        chunk.echo = FALSE, code = c(\"penguins %>% \", \"  ggplot(aes(y = species, x = body_mass_g, fill = ___)) + \", \n        \"  geom_density_ridges()\", \"\"), out.width.px = 480, out.height.px = 288, \n        params.src = \"r colors, exercise = TRUE\", fig.num = 0, \n        exercise.df_print = \"default\", exercise.checker = \"NULL\"), \n    engine = \"r\", version = \"4\"), class = c(\"r\", \"tutorial_exercise\"\n)))\n</script>\n",
      "preserve6f3058d547dd3880": "\n<script type=\"application/shiny-prerendered\" data-context=\"server\">\nlearnr:::question_prerendered_chunk(structure(list(type = \"learnr_radio\", label = \"quiz_4\", question = structure(\"Based on the ANOVA table above, what would you conclude for the second hypothesis test?\", html = TRUE, class = c(\"html\", \n\"character\")), answers = list(structure(list(id = \"lnr_ans_aa0df97\", \n    option = \"Fail to reject H0, the mean body masss of the species are the same, after accouting for year of capture.\", \n    value = \"Fail to reject H0, the mean body masss of the species are the same, after accouting for year of capture.\", \n    label = structure(\"Fail to reject H0, the mean body masss of the species are the same, after accouting for year of capture.\", html = TRUE, class = c(\"html\", \n    \"character\")), correct = FALSE, message = structure(\"Careful! Look at the p-value for the <code>species<\\u002fcode> line. Is is small? What does that say about whether it seems reasonable to say that the mean body masss are the same for every species?\", html = TRUE, class = c(\"html\", \n    \"character\")), type = \"literal\"), class = c(\"tutorial_question_answer\", \n\"tutorial_quiz_answer\")), structure(list(id = \"lnr_ans_a696269\", \n    option = \"There is strong evidence that at least one species has a different mean body mass, after accouting for year of capture.\", \n    value = \"There is strong evidence that at least one species has a different mean body mass, after accouting for year of capture.\", \n    label = structure(\"There is strong evidence that at least one species has a different mean body mass, after accouting for year of capture.\", html = TRUE, class = c(\"html\", \n    \"character\")), correct = TRUE, message = NULL, type = \"literal\"), class = c(\"tutorial_question_answer\", \n\"tutorial_quiz_answer\")), structure(list(id = \"lnr_ans_bd7def8\", \n    option = \"There is strong evidence that each species has a different mean body mass, after accouting for year of capture.\", \n    value = \"There is strong evidence that each species has a different mean body mass, after accouting for year of capture.\", \n    label = structure(\"There is strong evidence that each species has a different mean body mass, after accouting for year of capture.\", html = TRUE, class = c(\"html\", \n    \"character\")), correct = FALSE, message = structure(\"Careful! What is the null hypothesis for an ANOVA? What is the opposite of saying ‘everything is equal’?\", html = TRUE, class = c(\"html\", \n    \"character\")), type = \"literal\"), class = c(\"tutorial_question_answer\", \n\"tutorial_quiz_answer\")), structure(list(id = \"lnr_ans_7e04a7a\", \n    option = \"There is strong evidence that at least one species has a different mean body mass.\", \n    value = \"There is strong evidence that at least one species has a different mean body mass.\", \n    label = structure(\"There is strong evidence that at least one species has a different mean body mass.\", html = TRUE, class = c(\"html\", \n    \"character\")), correct = FALSE, message = structure(\"Careful! What is this hypothesis test conditional on?\", html = TRUE, class = c(\"html\", \n    \"character\")), type = \"literal\"), class = c(\"tutorial_question_answer\", \n\"tutorial_quiz_answer\"))), button_labels = list(submit = structure(\"<span data-i18n=\\\"button.questionsubmit\\\">Submit Answer<\\u002fspan>\", html = TRUE, class = c(\"html\", \n\"character\")), try_again = structure(\"<span data-i18n=\\\"button.questiontryagain\\\">Try Again<\\u002fspan>\", html = TRUE, class = c(\"html\", \n\"character\"))), messages = list(correct = structure(\"Correct!\", html = TRUE, class = c(\"html\", \n\"character\")), try_again = structure(\"Incorrect\", html = TRUE, class = c(\"html\", \n\"character\")), incorrect = structure(\"Incorrect\", html = TRUE, class = c(\"html\", \n\"character\")), message = NULL, post_message = NULL), ids = list(\n    answer = \"quiz_4-answer\", question = \"quiz_4\"), loading = NULL, \n    random_answer_order = FALSE, allow_retry = TRUE, seed = 202922232.905507, \n    options = list()), class = c(\"learnr_radio\", \"tutorial_question\"\n)), session = session)\n</script>\n",
      "preserve7101715fd807404b": "\n<script type=\"application/shiny-prerendered\" data-context=\"server\">\n`tutorial-exercise-colors-result` <- learnr:::setup_exercise_handler(reactive(req(input$`tutorial-exercise-colors-code-editor`)), session)\noutput$`tutorial-exercise-colors-output` <- renderUI({\n  `tutorial-exercise-colors-result`()\n})\n</script>\n",
      "preserve94cf38c41a99e2ba": "\n<script type=\"application/shiny-prerendered\" data-context=\"server\">\nlearnr:::question_prerendered_chunk(structure(list(type = \"learnr_radio\", label = \"quiz_5\", question = structure(\"What should your next step be?\", html = TRUE, class = c(\"html\", \n\"character\")), answers = list(structure(list(id = \"lnr_ans_e36a0b8\", \n    option = \"Nothing! We've finished our analysis! \", value = \"Nothing! We've finished our analysis! \", \n    label = structure(\"Nothing! We’ve finished our analysis!\", html = TRUE, class = c(\"html\", \n    \"character\")), correct = FALSE, message = structure(\"Careful! Did you decide that year needed to be included in the final model?\", html = TRUE, class = c(\"html\", \n    \"character\")), type = \"literal\"), class = c(\"tutorial_question_answer\", \n\"tutorial_quiz_answer\")), structure(list(id = \"lnr_ans_88b2da1\", \n    option = \"Fit a one-way ANOVA model with only species as an explanatory variable.\", \n    value = \"Fit a one-way ANOVA model with only species as an explanatory variable.\", \n    label = structure(\"Fit a one-way ANOVA model with only species as an explanatory variable.\", html = TRUE, class = c(\"html\", \n    \"character\")), correct = TRUE, message = NULL, type = \"literal\"), class = c(\"tutorial_question_answer\", \n\"tutorial_quiz_answer\")), structure(list(id = \"lnr_ans_5e12678\", \n    option = \"Fit a one-way ANOVA model with only year as an explanatory variable.\", \n    value = \"Fit a one-way ANOVA model with only year as an explanatory variable.\", \n    label = structure(\"Fit a one-way ANOVA model with only year as an explanatory variable.\", html = TRUE, class = c(\"html\", \n    \"character\")), correct = FALSE, message = structure(\"Careful! What did you decide for the hypothesis test for a difference in mean body mass between years?\", html = TRUE, class = c(\"html\", \n    \"character\")), type = \"literal\"), class = c(\"tutorial_question_answer\", \n\"tutorial_quiz_answer\"))), button_labels = list(submit = structure(\"<span data-i18n=\\\"button.questionsubmit\\\">Submit Answer<\\u002fspan>\", html = TRUE, class = c(\"html\", \n\"character\")), try_again = structure(\"<span data-i18n=\\\"button.questiontryagain\\\">Try Again<\\u002fspan>\", html = TRUE, class = c(\"html\", \n\"character\"))), messages = list(correct = structure(\"Correct!\", html = TRUE, class = c(\"html\", \n\"character\")), try_again = structure(\"Incorrect\", html = TRUE, class = c(\"html\", \n\"character\")), incorrect = structure(\"Incorrect\", html = TRUE, class = c(\"html\", \n\"character\")), message = NULL, post_message = NULL), ids = list(\n    answer = \"quiz_5-answer\", question = \"quiz_5\"), loading = NULL, \n    random_answer_order = FALSE, allow_retry = TRUE, seed = 1980412336.0778, \n    options = list()), class = c(\"learnr_radio\", \"tutorial_question\"\n)), session = session)\n</script>\n",
      "preservec425c8e9a424ab9a": "\n<script type=\"application/shiny-prerendered\" data-context=\"server\">\nlearnr:::question_prerendered_chunk(structure(list(type = \"learnr_radio\", label = \"quiz_3\", question = structure(\"Based on the same plot above, is the condition of normally distributed responses violated?\", html = TRUE, class = c(\"html\", \n\"character\")), answers = list(structure(list(id = \"lnr_ans_676a68a\", \n    option = \"Yes.\", value = \"Yes.\", label = structure(\"Yes.\", html = TRUE, class = c(\"html\", \n    \"character\")), correct = FALSE, message = structure(\"Give the plot another look. This condition is fairly robust to slight differences in shape, but we do need to worry about outliers. Are there large outliers present in any of the groups?\", html = TRUE, class = c(\"html\", \n    \"character\")), type = \"literal\"), class = c(\"tutorial_question_answer\", \n\"tutorial_quiz_answer\")), structure(list(id = \"lnr_ans_718e188\", \n    option = \"No.\", value = \"No.\", label = structure(\"No.\", html = TRUE, class = c(\"html\", \n    \"character\")), correct = TRUE, message = NULL, type = \"literal\"), class = c(\"tutorial_question_answer\", \n\"tutorial_quiz_answer\")), structure(list(id = \"lnr_ans_337eaf4\", \n    option = \"It's difficult to tell.\", value = \"It's difficult to tell.\", \n    label = structure(\"It’s difficult to tell.\", html = TRUE, class = c(\"html\", \n    \"character\")), correct = FALSE, message = structure(\"Are there large outliers present in any of the groups?\", html = TRUE, class = c(\"html\", \n    \"character\")), type = \"literal\"), class = c(\"tutorial_question_answer\", \n\"tutorial_quiz_answer\"))), button_labels = list(submit = structure(\"<span data-i18n=\\\"button.questionsubmit\\\">Submit Answer<\\u002fspan>\", html = TRUE, class = c(\"html\", \n\"character\")), try_again = structure(\"<span data-i18n=\\\"button.questiontryagain\\\">Try Again<\\u002fspan>\", html = TRUE, class = c(\"html\", \n\"character\"))), messages = list(correct = structure(\"Correct! The distributions all look ‘normal enough’ and there are no large outliers in any of the groups.\", html = TRUE, class = c(\"html\", \n\"character\")), try_again = structure(\"Incorrect\", html = TRUE, class = c(\"html\", \n\"character\")), incorrect = structure(\"Incorrect\", html = TRUE, class = c(\"html\", \n\"character\")), message = NULL, post_message = NULL), ids = list(\n    answer = \"quiz_3-answer\", question = \"quiz_3\"), loading = NULL, \n    random_answer_order = FALSE, allow_retry = TRUE, seed = 1417152998.34009, \n    options = list()), class = c(\"learnr_radio\", \"tutorial_question\"\n)), session = session)\n</script>\n",
      "preservece12161a64474e50": "\n<script type=\"application/shiny-prerendered\" data-context=\"server\">\nlearnr:::question_prerendered_chunk(structure(list(type = \"learnr_radio\", label = \"quiz_2\", question = structure(\"Based on the plot below, is the condition of equal variablility violated?\", html = TRUE, class = c(\"html\", \n\"character\")), answers = list(structure(list(id = \"lnr_ans_a5a9b30\", \n    option = \"No.\", value = \"No.\", label = structure(\"No.\", html = TRUE, class = c(\"html\", \n    \"character\")), correct = TRUE, message = NULL, type = \"literal\"), class = c(\"tutorial_question_answer\", \n\"tutorial_quiz_answer\")), structure(list(id = \"lnr_ans_6153106\", \n    option = \"Yes.\", value = \"Yes.\", label = structure(\"Yes.\", html = TRUE, class = c(\"html\", \n    \"character\")), correct = FALSE, message = structure(\"Give the plot another look. Does it appear that the length of the violins of the groups are substantiall different?\", html = TRUE, class = c(\"html\", \n    \"character\")), type = \"literal\"), class = c(\"tutorial_question_answer\", \n\"tutorial_quiz_answer\")), structure(list(id = \"lnr_ans_284e2e1\", \n    option = \"It's difficult to tell. \", value = \"It's difficult to tell. \", \n    label = structure(\"It’s difficult to tell.\", html = TRUE, class = c(\"html\", \n    \"character\")), correct = FALSE, message = structure(\"Does it appear that the width of the density plots of the groupsare substantially different?\", html = TRUE, class = c(\"html\", \n    \"character\")), type = \"literal\"), class = c(\"tutorial_question_answer\", \n\"tutorial_quiz_answer\"))), button_labels = list(submit = structure(\"<span data-i18n=\\\"button.questionsubmit\\\">Submit Answer<\\u002fspan>\", html = TRUE, class = c(\"html\", \n\"character\")), try_again = structure(\"<span data-i18n=\\\"button.questiontryagain\\\">Try Again<\\u002fspan>\", html = TRUE, class = c(\"html\", \n\"character\"))), messages = list(correct = structure(\"Correct! The length of the violins looks similar across the different groups.\", html = TRUE, class = c(\"html\", \n\"character\")), try_again = structure(\"Incorrect\", html = TRUE, class = c(\"html\", \n\"character\")), incorrect = structure(\"Incorrect\", html = TRUE, class = c(\"html\", \n\"character\")), message = NULL, post_message = NULL), ids = list(\n    answer = \"quiz_2-answer\", question = \"quiz_2\"), loading = NULL, \n    random_answer_order = FALSE, allow_retry = TRUE, seed = 1804539303.6597, \n    options = list()), class = c(\"learnr_radio\", \"tutorial_question\"\n)), session = session)\n</script>\n",
      "preserved7637c1500bbb178": "\n<script type=\"application/shiny-prerendered\" data-context=\"server\">\nlearnr:::question_prerendered_chunk(structure(list(type = \"learnr_checkbox\", label = \"quiz_1\", question = structure(\"Which of the following is important to consider when assessing independence?\", html = TRUE, class = c(\"html\", \n\"character\")), answers = list(structure(list(id = \"lnr_ans_94f446c\", \n    option = \"If the same penguins could be sampled multiple years.\", \n    value = \"If the same penguins could be sampled multiple years.\", \n    label = structure(\"If the same penguins could be sampled multiple years.\", html = TRUE, class = c(\"html\", \n    \"character\")), correct = TRUE, message = NULL, type = \"literal\"), class = c(\"tutorial_question_answer\", \n\"tutorial_quiz_answer\")), structure(list(id = \"lnr_ans_bd3edbc\", \n    option = \"If the same penguins could be sampled at multiple islands.\", \n    value = \"If the same penguins could be sampled at multiple islands.\", \n    label = structure(\"If the same penguins could be sampled at multiple islands.\", html = TRUE, class = c(\"html\", \n    \"character\")), correct = FALSE, message = structure(\"No, island is not a variable we are interested in!\", html = TRUE, class = c(\"html\", \n    \"character\")), type = \"literal\"), class = c(\"tutorial_question_answer\", \n\"tutorial_quiz_answer\")), structure(list(id = \"lnr_ans_7bc9492\", \n    option = \"If penguins in each species could share similar information.\", \n    value = \"If penguins in each species could share similar information.\", \n    label = structure(\"If penguins in each species could share similar information.\", html = TRUE, class = c(\"html\", \n    \"character\")), correct = TRUE, message = NULL, type = \"literal\"), class = c(\"tutorial_question_answer\", \n\"tutorial_quiz_answer\")), structure(list(id = \"lnr_ans_47c2b1f\", \n    option = \"If penguin species share similar characteristics\", \n    value = \"If penguin species share similar characteristics\", \n    label = structure(\"If penguin species share similar characteristics\", html = TRUE, class = c(\"html\", \n    \"character\")), correct = FALSE, message = structure(\"No, this is not a consideration when assessing independence.\", html = TRUE, class = c(\"html\", \n    \"character\")), type = \"literal\"), class = c(\"tutorial_question_answer\", \n\"tutorial_quiz_answer\"))), button_labels = list(submit = structure(\"<span data-i18n=\\\"button.questionsubmit\\\">Submit Answer<\\u002fspan>\", html = TRUE, class = c(\"html\", \n\"character\")), try_again = structure(\"<span data-i18n=\\\"button.questiontryagain\\\">Try Again<\\u002fspan>\", html = TRUE, class = c(\"html\", \n\"character\"))), messages = list(correct = structure(\"Correct! We need to look across groups and within groups.\", html = TRUE, class = c(\"html\", \n\"character\")), try_again = structure(\"Incorrect. Be sure to select every correct answer.\", html = TRUE, class = c(\"html\", \n\"character\")), incorrect = structure(\"Incorrect\", html = TRUE, class = c(\"html\", \n\"character\")), message = NULL, post_message = NULL), ids = list(\n    answer = \"quiz_1-answer\", question = \"quiz_1\"), loading = NULL, \n    random_answer_order = FALSE, allow_retry = TRUE, seed = 912435026.575114, \n    options = list()), class = c(\"learnr_checkbox\", \"tutorial_question\"\n)), session = session)\n</script>\n",
      "preservef0ca2b7e7970478d": "\n<script type=\"application/shiny-prerendered\" data-context=\"server\">\nlearnr:::i18n_observe_tutorial_language(input, session)\n</script>\n",
      "preservef4167329886523f9": "\n<script type=\"application/shiny-prerendered\" data-context=\"server\">\nlearnr:::register_http_handlers(session, metadata = NULL)\n</script>\n"
    },
    "postProcess": true
  }
}
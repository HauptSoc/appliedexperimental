{
  "hash": "e8726d0ac106e9b7b290eacefe9d896d",
  "result": {
    "markdown": "---\ntitle: \"Creating a Bootstrap Distribution with infer\"\noutput: \n  learnr::tutorial:\n    progressive: true\n    allow_skip: true\nruntime: shiny_prerendered\n---\n\n\n\n::: {.cell layout-align=\"center\" context='data'}\n\n:::\n\n\n## Data\n\nPer the California Privacy Rights Act (CPRA), the salaries of employees of the state of California are required to be public. We will revisit the 2019 salaries of head coaches from CSU and UC universities introduced this week.\n\nFirst, let's load the `coaches` data set into your workspace and take a look at what the data look like.\n\n\n::: {.cell layout-align=\"center\" exercise='true'}\n<div class=\"tutorial-exercise\" data-label=\"load-data\" data-completion=\"1\" data-diagnostics=\"1\" data-startover=\"1\" data-lines=\"0\">\n\n```{.r .cell-code}\nglimpse(coaches)\n```\n\n<script type=\"application/json\" data-ui-opts=\"1\">{\"engine\":\"r\",\"has_checker\":false,\"caption\":\"<span data-i18n=\\\"text.enginecap\\\" data-i18n-opts=\\\"{&quot;engine&quot;:&quot;R&quot;}\\\">R Code<\\/span>\"}</script></div>\n:::\n\n\n## Section 1\n\n### Starting with one sample\n\nFor our investigation, we are interested in estimating the median salary for all CSU and UC coaches. In class we talked about creating the sampling distribution of the median salary, since I had the salaries of **every** CSU and UC head coach.\n\nToday, I've given you a simple random sample of 50 coaches from the master dataset of all CSU and UC coaches. This context should feel more familiar --- you are interested in estimating the value of the true median salary of all CSU and UC head coaches, given a sample of 50 coaches.\n\nThe population median salary of all CSU and UC coaches is: $137,619. Let's see how close our sample median is to this population median!\n\nUse the `summarize()` function to calculate the median `Total Pay & Benefits` for your sample of 50 coaches.\n\n\n::: {.cell layout-align=\"center\" exercise='true'}\n<div class=\"tutorial-exercise\" data-label=\"sample-median\" data-completion=\"1\" data-diagnostics=\"1\" data-startover=\"1\" data-lines=\"0\"><script type=\"application/json\" data-ui-opts=\"1\">{\"engine\":\"r\",\"has_checker\":false,\"caption\":\"<span data-i18n=\\\"text.enginecap\\\" data-i18n-opts=\\\"{&quot;engine&quot;:&quot;R&quot;}\\\">R Code<\\/span>\"}</script></div>\n:::\n\n::: {.cell layout-align=\"center\"}\n<div class=\"tutorial-exercise-support\" data-label=\"sample-median-hint-1\" data-completion=\"1\" data-diagnostics=\"1\" data-startover=\"1\" data-lines=\"0\">\n\n```{.r .cell-code}\nsummarize(coaches)\n# What goes inside the summarize() function?\n```\n\n</div>\n:::\n\n::: {.cell layout-align=\"center\"}\n<div class=\"tutorial-exercise-support\" data-label=\"sample-median-hint-2\" data-completion=\"1\" data-diagnostics=\"1\" data-startover=\"1\" data-lines=\"0\">\n\n```{.r .cell-code}\nsummarize(coaches, \n          median = median(`Total Pay & Benefits`))\n```\n\n</div>\n:::\n\n\nPlotting the data is possibly more important than calculating the sample statistic, since it gives us an idea of the distribution of these 50 salaries.\n\nCreate a histogram of the salaries from the sample of 50 coaches. I've given you some code to start with, but you'll need to add to it!\n\n\n::: {.cell layout-align=\"center\" exercise='true'}\n<div class=\"tutorial-exercise\" data-label=\"first-plot\" data-completion=\"1\" data-diagnostics=\"1\" data-startover=\"1\" data-lines=\"0\">\n\n```{.r .cell-code}\nggplot(data = coaches, \n       mapping = aes(x = ___)) \n```\n\n<script type=\"application/json\" data-ui-opts=\"1\">{\"engine\":\"r\",\"has_checker\":false,\"caption\":\"<span data-i18n=\\\"text.enginecap\\\" data-i18n-opts=\\\"{&quot;engine&quot;:&quot;R&quot;}\\\">R Code<\\/span>\"}</script></div>\n:::\n\n::: {.cell layout-align=\"center\"}\n<div class=\"tutorial-exercise-support\" data-label=\"first-plot-hint-1\" data-completion=\"1\" data-diagnostics=\"1\" data-startover=\"1\" data-lines=\"0\">\n\n```{.r .cell-code}\n# Use the numerical variable we are interested in!\nggplot(data = coaches, \n       mapping = aes(x = `Total Pay & Benefits`)) \n```\n\n</div>\n:::\n\n::: {.cell layout-align=\"center\"}\n<div class=\"tutorial-exercise-support\" data-label=\"first-plot-hint-2\" data-completion=\"1\" data-diagnostics=\"1\" data-startover=\"1\" data-lines=\"0\">\n\n```{.r .cell-code}\n# Add a histogram to the plot\nggplot(data = coaches, \n       mapping = aes(x = `Total Pay & Benefits`)) +\n  geom_histogram()\n```\n\n</div>\n:::\n\n::: {.cell layout-align=\"center\"}\n<div class=\"tutorial-exercise-support\" data-label=\"first-plot-hint-3\" data-completion=\"1\" data-diagnostics=\"1\" data-startover=\"1\" data-lines=\"0\">\n\n```{.r .cell-code}\n# Make the histogram look a bit better with binwidths! \nggplot(data = coaches, \n       mapping = aes(x = `Total Pay & Benefits`)) + \n  geom_histogram(binwidth = 75000)\n```\n\n</div>\n:::\n\n\n## Section 2\n\nNow, let's take our single sample of 50 and see what we might have gotten from other random samples!\n\n### One Resample\n\nWe'll start with getting one bootstrap resample. To do this we take our original sample (stored in the `coaches` dataset) and resample with replacement 50 times. The `rep_sample_n()` function from the **infer** package helps us obtain one of these resamples. All we need to do is specify the `size` and `replace` arguments.\n\n*Keep in mind: how large your resample should be and whether you should sample with or without replacement*\n\n\n::: {.cell layout-align=\"center\" exercise='true'}\n<div class=\"tutorial-exercise\" data-label=\"one-resample\" data-completion=\"1\" data-diagnostics=\"1\" data-startover=\"1\" data-lines=\"0\">\n\n```{.r .cell-code}\none_resample <- rep_sample_n(coaches, \n                             size = ___, \n                             replace = ___)\n```\n\n<script type=\"application/json\" data-ui-opts=\"1\">{\"engine\":\"r\",\"has_checker\":false,\"caption\":\"<span data-i18n=\\\"text.enginecap\\\" data-i18n-opts=\\\"{&quot;engine&quot;:&quot;R&quot;}\\\">R Code<\\/span>\"}</script></div>\n:::\n\n::: {.cell layout-align=\"center\"}\n<div class=\"tutorial-exercise-support\" data-label=\"one-resample-hint-1\" data-completion=\"1\" data-diagnostics=\"1\" data-startover=\"1\" data-lines=\"0\">\n\n```{.r .cell-code}\none_resample <- rep_sample_n(coaches, \n                             size = 50, \n                             replace = ___)\n```\n\n</div>\n:::\n\n::: {.cell layout-align=\"center\"}\n<div class=\"tutorial-exercise-support\" data-label=\"one-resample-hint-2\" data-completion=\"1\" data-diagnostics=\"1\" data-startover=\"1\" data-lines=\"0\">\n\n```{.r .cell-code}\none_resample <- rep_sample_n(coaches, \n                             size = 50, \n                             replace = TRUE)\n```\n\n</div>\n:::\n\n\nLet's compare our resample with our original sample. Your original sample had a median of $137,619. Use the `summarize()` function to find the median of this resample.\n\n\n::: {.cell layout-align=\"center\" exercise='true'}\n<div class=\"tutorial-exercise\" data-label=\"one-resample-median\" data-completion=\"1\" data-diagnostics=\"1\" data-startover=\"1\" data-lines=\"0\"><script type=\"application/json\" data-ui-opts=\"1\">{\"engine\":\"r\",\"has_checker\":false,\"caption\":\"<span data-i18n=\\\"text.enginecap\\\" data-i18n-opts=\\\"{&quot;engine&quot;:&quot;R&quot;}\\\">R Code<\\/span>\"}</script></div>\n:::\n\n\n::: {#one-resample-median-hint}\n**Hint:** Remember to use the `one_resample` dataset!\n:::\n\n### Multiple Resamples\n\nNow, let's take what we learned about creating and summarizing one bootstrap resample and scale it up!\n\nFirst, we're going to create 500 different bootstrap resamples, each of size 50. We're still using the `rep_sample_n()` function to do this, but now we specify the number of resamples we want with the `reps` argument.\n\nModify your previous code to create 500 bootstrap resamples.\n\n\n::: {.cell layout-align=\"center\" exercise='true'}\n<div class=\"tutorial-exercise\" data-label=\"multiple-resamples\" data-completion=\"1\" data-diagnostics=\"1\" data-startover=\"1\" data-lines=\"0\">\n\n```{.r .cell-code}\nmultiple_resamples <- rep_sample_n(coaches, \n                                   size = ___, \n                                   replace = ___, \n                                   reps = ___)\n```\n\n<script type=\"application/json\" data-ui-opts=\"1\">{\"engine\":\"r\",\"has_checker\":false,\"caption\":\"<span data-i18n=\\\"text.enginecap\\\" data-i18n-opts=\\\"{&quot;engine&quot;:&quot;R&quot;}\\\">R Code<\\/span>\"}</script></div>\n:::\n\n::: {.cell layout-align=\"center\"}\n<div class=\"tutorial-exercise-support\" data-label=\"multiple-resamples-hint-1\" data-completion=\"1\" data-diagnostics=\"1\" data-startover=\"1\" data-lines=\"0\">\n\n```{.r .cell-code}\n# These are the options we used for one resample! \nmultiple_resamples <- rep_sample_n(coaches, \n                                   size = 50, \n                                   replace = TRUE, \n                                   reps = ___)\n```\n\n</div>\n:::\n\n::: {.cell layout-align=\"center\"}\n<div class=\"tutorial-exercise-support\" data-label=\"multiple-resamples-hint-2\" data-completion=\"1\" data-diagnostics=\"1\" data-startover=\"1\" data-lines=\"0\">\n\n```{.r .cell-code}\n# We want 500 resamples! \nmultiple_resamples <- rep_sample_n(coaches, \n                                   size = 50, \n                                   replace = TRUE, \n                                   reps = 500)\n```\n\n</div>\n:::\n\n\nNow that we have 500 resamples we need to summarize each sample with a single statistic. In our investigation we are interested in the sample median, so that's the statistic we will use.\n\nCalculate the median `Total Pay & Benefits` for each resample. The `multiple_resamples` dataset contains 25000 numbers --- 50 observations for 500 samples. So, to get each resample's median we need to `group_by()` the sample ID column (`replicate`) **before** we calculate the median.\n\n\n::: {.cell layout-align=\"center\" exercise='true'}\n<div class=\"tutorial-exercise\" data-label=\"multiple-resample-median\" data-completion=\"1\" data-diagnostics=\"1\" data-startover=\"1\" data-lines=\"0\">\n\n```{.r .cell-code}\nmultiple_resamples %>% \n```\n\n<script type=\"application/json\" data-ui-opts=\"1\">{\"engine\":\"r\",\"has_checker\":false,\"caption\":\"<span data-i18n=\\\"text.enginecap\\\" data-i18n-opts=\\\"{&quot;engine&quot;:&quot;R&quot;}\\\">R Code<\\/span>\"}</script></div>\n:::\n\n::: {.cell layout-align=\"center\"}\n<div class=\"tutorial-exercise-support\" data-label=\"multiple-resample-median-hint-1\" data-completion=\"1\" data-diagnostics=\"1\" data-startover=\"1\" data-lines=\"0\">\n\n```{.r .cell-code}\n# Make different groups for each sample\nmultiple_resamples %>% \n  group_by(replicate)\n```\n\n</div>\n:::\n\n::: {.cell layout-align=\"center\"}\n<div class=\"tutorial-exercise-support\" data-label=\"multiple-resample-median-hint-2\" data-completion=\"1\" data-diagnostics=\"1\" data-startover=\"1\" data-lines=\"0\">\n\n```{.r .cell-code}\n# Find the median of each group\nmultiple_resamples %>% \n  group_by(replicate) %>% \n  summarize(median = median(`Total Pay & Benefits`))\n```\n\n</div>\n:::\n\n\n## Section 3\n\nFor confidence intervals, we'd like to have a method that is a bit more dynamic than what we've been doing with `rep_sample_n()`, `group_by()`, and `summarize()`. The **infer** package includes tools that help us create bootstrap resamples, visualize the distribution of our bootstrap statistics, and find confidence intervals.\n\n### The infer pipeline\n\nGenerating bootstrap statistics has a similar process to what we used previously, but it has a very different feel. The process looks something like this:\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\nLet's walk through each of the components of the infer \"pipeline.\"\n\n**Step 1:** `specify()` your response (and explanatory) variable(s)\n\nThis step declares to R what variable(s) you are interested in. For this tutorial we are only interested in one variable: `Total Pay & Benefits`. In the future, we will include an `explanatory` variable to help explain the variability in the response variable.\n\n![](images/specify.png)\n\n**Step 2:** `generate()` resamples\n\nThe `generate()` step takes your original data and generates bootstrap resamples. It knows how many resamples to generate from the quantity specified in the `reps` argument. Additionally, it knows to sample **with replacement** when the `type` argument is set to `\"bootstrap\"`.\n\n![](images/generate.png)\n\n**Step 3:** `calculate()` bootstrap statistics\n\nNow that you've generated lots of bootstrap resamples, you need to summarize them with a single statistic. That statistic is what you tell the `calculate()` function to find! There are lots of different statistics we will explore, but for this investigation our `stat` will be a `\"median\"`.\n\n![](images/calculate.png)\n\n### Your turn!\n\nTake what you've learned about the infer pipeline and create a new dataset, named `coaches_resample` that contains median salaries calculated from 1000 bootstrap resamples.\n\n\n::: {.cell layout-align=\"center\" exercise='true'}\n<div class=\"tutorial-exercise\" data-label=\"infer-exercise\" data-completion=\"1\" data-diagnostics=\"1\" data-startover=\"1\" data-lines=\"0\">\n\n```{.r .cell-code}\ncoaches_resample <- coaches %>% \n  specify(___) %>% \n  generate(___) %>% \n  calculate(___)\n```\n\n<script type=\"application/json\" data-ui-opts=\"1\">{\"engine\":\"r\",\"has_checker\":false,\"caption\":\"<span data-i18n=\\\"text.enginecap\\\" data-i18n-opts=\\\"{&quot;engine&quot;:&quot;R&quot;}\\\">R Code<\\/span>\"}</script></div>\n:::\n\n::: {.cell layout-align=\"center\"}\n<div class=\"tutorial-exercise-support\" data-label=\"infer-exercise-hint-1\" data-completion=\"1\" data-diagnostics=\"1\" data-startover=\"1\" data-lines=\"0\">\n\n```{.r .cell-code}\n# Specify what your response variable is!\ncoaches_resample <- coaches %>% \n  specify(response = `Total Pay & Benefits`) %>% \n  generate(___) %>% \n  calculate(___)\n```\n\n</div>\n:::\n\n::: {.cell layout-align=\"center\"}\n<div class=\"tutorial-exercise-support\" data-label=\"infer-exercise-hint-2\" data-completion=\"1\" data-diagnostics=\"1\" data-startover=\"1\" data-lines=\"0\">\n\n```{.r .cell-code}\n# Generate 1000 bootstrap resamples!\ncoaches_resample <- coaches %>% \n  specify(response = `Total Pay & Benefits`) %>% \n  generate(reps = 1000, type = \"bootstrap\") %>% \n  calculate(___)\n```\n\n</div>\n:::\n\n::: {.cell layout-align=\"center\"}\n<div class=\"tutorial-exercise-support\" data-label=\"infer-exercise-hint-3\" data-completion=\"1\" data-diagnostics=\"1\" data-startover=\"1\" data-lines=\"0\">\n\n```{.r .cell-code}\n# Calculate the median for each resample! \ncoaches_resample <- coaches %>% \n  specify(response = `Total Pay & Benefits`) %>% \n  generate(reps = 1000, type = \"bootstrap\") %>% \n  calculate(stat = \"median\")\n```\n\n</div>\n:::\n\n\n## Section 4\n\nAlright, our final step is to use our bootstrap statistics to calculate a confidence interval for the true median salary of all CSU and UC head coaches.\n\nA nice first step is to visualize how the distribution of bootstrap statistics looks. The `coaches_resample` object contains 1000 medians calculated from 1000 different bootstrap resamples. Let's use the built-in `visualize()` function to make a quick histogram of these bootstrap medians.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nvisualise(coaches_resample)\n```\n\n::: {.cell-output-display}\n![](infer-CI-tutorial_files/figure-html/unnamed-chunk-2-1.png){fig-align='center' width=480}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\nIt looks like the majority of medians fall between $136,006 and $99,877, but let's quantify this range with a confidence interval.\n\nThe `get_confidence_interval()` function is what we use to find a confidence interval from a set of bootstrap statistics. This function takes three arguments:\n\n1.  a dataset containing bootstrap statistics\n2.  the level of confidence that should be used\n3.  the type of method to use when making the interval\n\nThis looks something like:\n\n<center>\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n</center>\n\n</br>\n\nUsing these tools, calculate a 99% confidence interval for the population median using the 1000 bootstrap statistics you found previously. Use the percentile method to calculate your confidence interval.\n\nWhen you are done, preview what your confidence interval looks like!\n\n\n::: {.cell layout-align=\"center\" exercise='true'}\n<div class=\"tutorial-exercise\" data-label=\"get-CI\" data-completion=\"1\" data-diagnostics=\"1\" data-startover=\"1\" data-lines=\"0\">\n\n```{.r .cell-code}\ncoaches_CI <- coaches_resample %>% \n  get_confidence_interval(level = ___, type = ___)\n```\n\n<script type=\"application/json\" data-ui-opts=\"1\">{\"engine\":\"r\",\"has_checker\":false,\"caption\":\"<span data-i18n=\\\"text.enginecap\\\" data-i18n-opts=\\\"{&quot;engine&quot;:&quot;R&quot;}\\\">R Code<\\/span>\"}</script></div>\n:::\n\n::: {.cell layout-align=\"center\"}\n<div class=\"tutorial-exercise-support\" data-label=\"get-CI-hint-1\" data-completion=\"1\" data-diagnostics=\"1\" data-startover=\"1\" data-lines=\"0\">\n\n```{.r .cell-code}\n# For a 99% interval your level is 0.99\ncoaches_CI <- coaches_resample %>% \n  get_confidence_interval(level = 0.99, type = ___)\n```\n\n</div>\n:::\n\n::: {.cell layout-align=\"center\"}\n<div class=\"tutorial-exercise-support\" data-label=\"get-CI-hint-2\" data-completion=\"1\" data-diagnostics=\"1\" data-startover=\"1\" data-lines=\"0\">\n\n```{.r .cell-code}\n# For a percentile CI you use the \"percentile\" method\ncoaches_CI <- coaches_resample %>% \n  get_confidence_interval(level = 0.99, type = \"percentile\")\n```\n\n</div>\n:::\n\n\n**How would you interpret the interval you got?**\n\npreservec67789d5672d9bd5\npreserve41a7e43169fffe9f\npreservefeb7c6a8e86be401\npreserve1559c253167db2dd\npreserve544e7060380e658a\npreserve365058552b92447b\npreservec34cf16ec4a2fe7c\npreserve705721a3a566bd33\npreservea59bc19ef9f08008\npreservec568d1c035ebdcd0\npreservece3c379f4dc86cab\npreserve8ab938688762b661\npreserve7f9884335718ede3\npreserveef7f9fef4b870a4b\npreservec1317b97b0d1db84\npreserveef8f4bd992d47da5\npreserve3b3857091682586e\npreserve5cfe7f34c8e3f51d\npreservefef97835a15de412\npreservec1a995f19bb0f5f6\npreservef4b1331baa264add\npreserve56c0e40eb6017371\npreserve6e6a7687367a6a25\npreservecbaebcb78a010c48\npreserve831fecbf23491aad\n\n<!--html_preserve-->\n<script type=\"application/shiny-prerendered\" data-context=\"dependencies\">\n{\"type\":\"list\",\"attributes\":{},\"value\":[{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"jquery\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"3.6.0\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"lib/3.6.0\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"jquery-3.6.0.min.js\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"jquerylib\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.1.4\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"font-awesome\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"6.4.0\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"fontawesome\"]}]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"css/all.min.css\",\"css/v4-shims.min.css\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"fontawesome\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.5.1\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"bootbox\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"5.5.2\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"lib/bootbox\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"bootbox.min.js\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"learnr\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.11.3\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"idb-keyvalue\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"3.2.0\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"lib/idb-keyval\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"idb-keyval-iife-compat.min.js\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"learnr\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[false]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.11.3\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"tutorial\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.11.3\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"lib/tutorial\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"tutorial.js\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"tutorial.css\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"learnr\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.11.3\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"ace\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"1.10.1\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"lib/ace\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"ace.js\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"learnr\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.11.3\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"clipboardjs\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"2.0.10\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"lib/clipboardjs\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"clipboard.min.js\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"learnr\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.11.3\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"ace\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"1.10.1\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"lib/ace\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"ace.js\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"learnr\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.11.3\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"clipboardjs\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"2.0.10\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"lib/clipboardjs\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"clipboard.min.js\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"learnr\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.11.3\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"ace\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"1.10.1\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"lib/ace\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"ace.js\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"learnr\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.11.3\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"clipboardjs\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"2.0.10\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"lib/clipboardjs\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"clipboard.min.js\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"learnr\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.11.3\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"ace\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"1.10.1\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"lib/ace\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"ace.js\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"learnr\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.11.3\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"clipboardjs\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"2.0.10\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"lib/clipboardjs\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"clipboard.min.js\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"learnr\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.11.3\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"ace\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"1.10.1\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"lib/ace\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"ace.js\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"learnr\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.11.3\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"clipboardjs\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"2.0.10\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"lib/clipboardjs\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"clipboard.min.js\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"learnr\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.11.3\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"ace\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"1.10.1\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"lib/ace\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"ace.js\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"learnr\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.11.3\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"clipboardjs\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"2.0.10\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"lib/clipboardjs\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"clipboard.min.js\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"learnr\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.11.3\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"ace\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"1.10.1\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"lib/ace\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"ace.js\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"learnr\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.11.3\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"clipboardjs\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"2.0.10\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"lib/clipboardjs\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"clipboard.min.js\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"learnr\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.11.3\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"ace\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"1.10.1\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"lib/ace\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"ace.js\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"learnr\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.11.3\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"clipboardjs\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"2.0.10\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"lib/clipboardjs\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"clipboard.min.js\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"learnr\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.11.3\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"ace\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"1.10.1\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"lib/ace\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"ace.js\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"learnr\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.11.3\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"clipboardjs\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"2.0.10\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"lib/clipboardjs\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"clipboard.min.js\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"learnr\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.11.3\"]}]}]}\n</script>\n<!--/html_preserve-->\n<!--html_preserve-->\n<script type=\"application/shiny-prerendered\" data-context=\"execution_dependencies\">\n{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"packages\"]}},\"value\":[{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"packages\",\"version\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"data.frame\"]},\"row.names\":{\"type\":\"integer\",\"attributes\":{},\"value\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"base\",\"bit\",\"bit64\",\"cli\",\"colorspace\",\"compiler\",\"crayon\",\"curl\",\"datasets\",\"digest\",\"dplyr\",\"ellipsis\",\"evaluate\",\"fansi\",\"farver\",\"fastmap\",\"fontawesome\",\"forcats\",\"generics\",\"ggplot2\",\"glue\",\"graphics\",\"grDevices\",\"grid\",\"gtable\",\"hms\",\"htmltools\",\"htmlwidgets\",\"httpuv\",\"infer\",\"jquerylib\",\"jsonlite\",\"knitr\",\"labeling\",\"later\",\"learnr\",\"lifecycle\",\"lubridate\",\"magrittr\",\"methods\",\"mime\",\"munsell\",\"parallel\",\"pillar\",\"pkgconfig\",\"promises\",\"purrr\",\"R6\",\"Rcpp\",\"readr\",\"rlang\",\"rmarkdown\",\"rprojroot\",\"rstudioapi\",\"scales\",\"shiny\",\"stats\",\"stringi\",\"stringr\",\"tibble\",\"tidyr\",\"tidyselect\",\"tidyverse\",\"timechange\",\"tools\",\"tzdb\",\"utf8\",\"utils\",\"vctrs\",\"vroom\",\"withr\",\"xfun\",\"xtable\",\"yaml\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"4.3.0\",\"4.0.5\",\"4.0.5\",\"3.6.1\",\"2.1-0\",\"4.3.0\",\"1.5.2\",\"5.0.0\",\"4.3.0\",\"0.6.31\",\"1.1.2\",\"0.3.2\",\"0.20\",\"1.0.4\",\"2.1.1\",\"1.1.1\",\"0.5.1\",\"1.0.0\",\"0.1.3\",\"3.4.2\",\"1.6.2\",\"4.3.0\",\"4.3.0\",\"4.3.0\",\"0.3.3\",\"1.1.3\",\"0.5.5\",\"1.6.2\",\"1.6.9\",\"1.0.4\",\"0.1.4\",\"1.8.4\",\"1.42\",\"0.4.2\",\"1.3.0\",\"0.11.3\",\"1.0.3\",\"1.9.2\",\"2.0.3\",\"4.3.0\",\"0.12\",\"0.5.0\",\"4.3.0\",\"1.9.0\",\"2.0.3\",\"1.2.0.1\",\"1.0.1\",\"2.5.1\",\"1.0.10\",\"2.1.4\",\"1.1.0\",\"2.21\",\"2.0.3\",\"0.14\",\"1.2.1\",\"1.7.4\",\"4.3.0\",\"1.7.12\",\"1.5.0\",\"3.2.1\",\"1.3.0\",\"1.2.0\",\"2.0.0\",\"0.2.0\",\"4.3.0\",\"0.3.0\",\"1.2.3\",\"4.3.0\",\"0.6.2\",\"1.6.1\",\"2.5.0\",\"0.39\",\"1.8-4\",\"2.3.7\"]}]}]}\n</script>\n<!--/html_preserve-->",
    "supporting": [
      "infer-CI-tutorial_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {
      "preserve1559c253167db2dd": "\n<script type=\"application/shiny-prerendered\" data-context=\"server\">\nlearnr:::i18n_observe_tutorial_language(input, session)\n</script>\n",
      "preserve365058552b92447b": "\n<script type=\"application/shiny-prerendered\" data-context=\"data\">\ncoaches_master <- read_csv(\"data/cu_csu_coaches.csv\") %>% \n  filter('Base Pay' > 0)\n\ncoaches <- coaches_master %>% \n  sample_n(size = 50, replace = FALSE)\n\none_resample <- coaches %>% \n  rep_sample_n(size = 50, replace = TRUE)\n\nmultiple_resamples <- coaches %>% \n  rep_sample_n(size = 50, replace = TRUE, reps = 500)\n\ncoaches_resample <- coaches %>% \n  specify(response = `Total Pay & Benefits`) %>% \n  generate(reps = 1000, type = \"bootstrap\") %>% \n  calculate(stat = \"median\")\n</script>\n",
      "preserve3b3857091682586e": "\n<script type=\"application/shiny-prerendered\" data-context=\"server\">\n`tutorial-exercise-multiple-resamples-result` <- learnr:::setup_exercise_handler(reactive(req(input$`tutorial-exercise-multiple-resamples-code-editor`)), session)\noutput$`tutorial-exercise-multiple-resamples-output` <- renderUI({\n  `tutorial-exercise-multiple-resamples-result`()\n})\n</script>\n",
      "preserve41a7e43169fffe9f": "\n<script type=\"application/shiny-prerendered\" data-context=\"server\">\nlearnr:::register_http_handlers(session, metadata = NULL)\n</script>\n",
      "preserve544e7060380e658a": "\n<script type=\"application/shiny-prerendered\" data-context=\"server\">\nsession$onSessionEnded(function() {\n        learnr:::event_trigger(session, \"session_stop\")\n      })\n</script>\n",
      "preserve56c0e40eb6017371": "\n<script type=\"application/shiny-prerendered\" data-context=\"server\">\nlearnr:::store_exercise_cache(structure(list(label = \"infer-exercise\", global_setup = structure(c(\"knitr::opts_chunk$set(fig.align = \\\"center\\\", \", \n\"                      fig.height = 3, \", \"                      fig.width = 5,\", \n\"                      echo = FALSE, \", \"                      message = FALSE, \", \n\"                      warning = FALSE)\", \"\", \"library(tidyverse)\", \n\"library(infer)\", \"library(learnr)\", \"\", \"options(scipen = 999)\"\n), chunk_opts = list(label = \"setup\", include = FALSE)), setup = NULL, \n    chunks = list(list(label = \"infer-exercise\", code = \"coaches_resample <- coaches %>% \\n  specify(___) %>% \\n  generate(___) %>% \\n  calculate(___)\", \n        opts = list(label = \"\\\"infer-exercise\\\"\", exercise = \"TRUE\"), \n        engine = \"r\")), code_check = NULL, error_check = NULL, \n    check = NULL, solution = NULL, tests = NULL, options = list(\n        eval = FALSE, echo = TRUE, results = \"markup\", tidy = FALSE, \n        tidy.opts = NULL, collapse = FALSE, prompt = FALSE, comment = NA, \n        highlight = FALSE, size = \"normalsize\", background = \"#F7F7F7\", \n        strip.white = TRUE, cache = 0, cache.path = \"infer-CI-tutorial_cache/html/\", \n        cache.vars = NULL, cache.lazy = TRUE, dependson = NULL, \n        autodep = FALSE, cache.rebuild = FALSE, fig.keep = \"high\", \n        fig.show = \"asis\", fig.align = \"center\", fig.path = \"infer-CI-tutorial_files/figure-html/\", \n        dev = \"png\", dev.args = NULL, dpi = 192, fig.ext = \"png\", \n        fig.width = 5, fig.height = 3, fig.env = \"figure\", fig.cap = NULL, \n        fig.scap = NULL, fig.lp = \"fig:\", fig.subcap = NULL, \n        fig.pos = \"\", out.width = 480, out.height = NULL, out.extra = NULL, \n        fig.retina = 2, external = TRUE, sanitize = FALSE, interval = 1, \n        aniopts = \"controls,loop\", warning = FALSE, error = FALSE, \n        message = FALSE, render = NULL, ref.label = NULL, child = NULL, \n        engine = \"r\", split = FALSE, include = TRUE, purl = TRUE, \n        fenced.echo = FALSE, ft.shadow = FALSE, label = \"infer-exercise\", \n        exercise = TRUE, original.params.src = \"r infer-exercise, exercise = TRUE\", \n        chunk.echo = FALSE, code = c(\"coaches_resample <- coaches %>% \", \n        \"  specify(___) %>% \", \"  generate(___) %>% \", \"  calculate(___)\"\n        ), out.width.px = 480, out.height.px = 288, params.src = \"r infer-exercise, exercise = TRUE\", \n        fig.num = 0, exercise.df_print = \"default\", exercise.checker = \"NULL\"), \n    engine = \"r\", version = \"4\"), class = c(\"r\", \"tutorial_exercise\"\n)))\n</script>\n",
      "preserve5cfe7f34c8e3f51d": "\n<script type=\"application/shiny-prerendered\" data-context=\"server\">\nlearnr:::store_exercise_cache(structure(list(label = \"multiple-resamples\", global_setup = structure(c(\"knitr::opts_chunk$set(fig.align = \\\"center\\\", \", \n\"                      fig.height = 3, \", \"                      fig.width = 5,\", \n\"                      echo = FALSE, \", \"                      message = FALSE, \", \n\"                      warning = FALSE)\", \"\", \"library(tidyverse)\", \n\"library(infer)\", \"library(learnr)\", \"\", \"options(scipen = 999)\"\n), chunk_opts = list(label = \"setup\", include = FALSE)), setup = NULL, \n    chunks = list(list(label = \"multiple-resamples\", code = \"multiple_resamples <- rep_sample_n(coaches, \\n                                   size = ___, \\n                                   replace = ___, \\n                                   reps = ___)\", \n        opts = list(label = \"\\\"multiple-resamples\\\"\", exercise = \"TRUE\"), \n        engine = \"r\")), code_check = NULL, error_check = NULL, \n    check = NULL, solution = NULL, tests = NULL, options = list(\n        eval = FALSE, echo = TRUE, results = \"markup\", tidy = FALSE, \n        tidy.opts = NULL, collapse = FALSE, prompt = FALSE, comment = NA, \n        highlight = FALSE, size = \"normalsize\", background = \"#F7F7F7\", \n        strip.white = TRUE, cache = 0, cache.path = \"infer-CI-tutorial_cache/html/\", \n        cache.vars = NULL, cache.lazy = TRUE, dependson = NULL, \n        autodep = FALSE, cache.rebuild = FALSE, fig.keep = \"high\", \n        fig.show = \"asis\", fig.align = \"center\", fig.path = \"infer-CI-tutorial_files/figure-html/\", \n        dev = \"png\", dev.args = NULL, dpi = 192, fig.ext = \"png\", \n        fig.width = 5, fig.height = 3, fig.env = \"figure\", fig.cap = NULL, \n        fig.scap = NULL, fig.lp = \"fig:\", fig.subcap = NULL, \n        fig.pos = \"\", out.width = 480, out.height = NULL, out.extra = NULL, \n        fig.retina = 2, external = TRUE, sanitize = FALSE, interval = 1, \n        aniopts = \"controls,loop\", warning = FALSE, error = FALSE, \n        message = FALSE, render = NULL, ref.label = NULL, child = NULL, \n        engine = \"r\", split = FALSE, include = TRUE, purl = TRUE, \n        fenced.echo = FALSE, ft.shadow = FALSE, label = \"multiple-resamples\", \n        exercise = TRUE, original.params.src = \"r multiple-resamples, exercise = TRUE\", \n        chunk.echo = FALSE, code = c(\"multiple_resamples <- rep_sample_n(coaches, \", \n        \"                                   size = ___, \", \"                                   replace = ___, \", \n        \"                                   reps = ___)\"), out.width.px = 480, \n        out.height.px = 288, params.src = \"r multiple-resamples, exercise = TRUE\", \n        fig.num = 0, exercise.df_print = \"default\", exercise.checker = \"NULL\"), \n    engine = \"r\", version = \"4\"), class = c(\"r\", \"tutorial_exercise\"\n)))\n</script>\n",
      "preserve6e6a7687367a6a25": "\n<script type=\"application/shiny-prerendered\" data-context=\"server\">\n`tutorial-exercise-get-CI-result` <- learnr:::setup_exercise_handler(reactive(req(input$`tutorial-exercise-get-CI-code-editor`)), session)\noutput$`tutorial-exercise-get-CI-output` <- renderUI({\n  `tutorial-exercise-get-CI-result`()\n})\n</script>\n",
      "preserve705721a3a566bd33": "\n<script type=\"application/shiny-prerendered\" data-context=\"server\">\nlearnr:::store_exercise_cache(structure(list(label = \"load-data\", global_setup = structure(c(\"knitr::opts_chunk$set(fig.align = \\\"center\\\", \", \n\"                      fig.height = 3, \", \"                      fig.width = 5,\", \n\"                      echo = FALSE, \", \"                      message = FALSE, \", \n\"                      warning = FALSE)\", \"\", \"library(tidyverse)\", \n\"library(infer)\", \"library(learnr)\", \"\", \"options(scipen = 999)\"\n), chunk_opts = list(label = \"setup\", include = FALSE)), setup = NULL, \n    chunks = list(list(label = \"load-data\", code = \"\\nglimpse(coaches)\\n\", \n        opts = list(label = \"\\\"load-data\\\"\", exercise = \"TRUE\"), \n        engine = \"r\")), code_check = NULL, error_check = NULL, \n    check = NULL, solution = NULL, tests = NULL, options = list(\n        eval = FALSE, echo = TRUE, results = \"markup\", tidy = FALSE, \n        tidy.opts = NULL, collapse = FALSE, prompt = FALSE, comment = NA, \n        highlight = FALSE, size = \"normalsize\", background = \"#F7F7F7\", \n        strip.white = TRUE, cache = 0, cache.path = \"infer-CI-tutorial_cache/html/\", \n        cache.vars = NULL, cache.lazy = TRUE, dependson = NULL, \n        autodep = FALSE, cache.rebuild = FALSE, fig.keep = \"high\", \n        fig.show = \"asis\", fig.align = \"center\", fig.path = \"infer-CI-tutorial_files/figure-html/\", \n        dev = \"png\", dev.args = NULL, dpi = 192, fig.ext = \"png\", \n        fig.width = 5, fig.height = 3, fig.env = \"figure\", fig.cap = NULL, \n        fig.scap = NULL, fig.lp = \"fig:\", fig.subcap = NULL, \n        fig.pos = \"\", out.width = 480, out.height = NULL, out.extra = NULL, \n        fig.retina = 2, external = TRUE, sanitize = FALSE, interval = 1, \n        aniopts = \"controls,loop\", warning = FALSE, error = FALSE, \n        message = FALSE, render = NULL, ref.label = NULL, child = NULL, \n        engine = \"r\", split = FALSE, include = TRUE, purl = TRUE, \n        fenced.echo = FALSE, ft.shadow = FALSE, label = \"load-data\", \n        exercise = TRUE, original.params.src = \"r load-data, exercise = TRUE\", \n        chunk.echo = FALSE, code = c(\"\", \"glimpse(coaches)\", \n        \"\"), out.width.px = 480, out.height.px = 288, params.src = \"r load-data, exercise = TRUE\", \n        fig.num = 0, exercise.df_print = \"default\", exercise.checker = \"NULL\"), \n    engine = \"r\", version = \"4\"), class = c(\"r\", \"tutorial_exercise\"\n)))\n</script>\n",
      "preserve7f9884335718ede3": "\n<script type=\"application/shiny-prerendered\" data-context=\"server\">\n`tutorial-exercise-one-resample-result` <- learnr:::setup_exercise_handler(reactive(req(input$`tutorial-exercise-one-resample-code-editor`)), session)\noutput$`tutorial-exercise-one-resample-output` <- renderUI({\n  `tutorial-exercise-one-resample-result`()\n})\n</script>\n",
      "preserve831fecbf23491aad": "\n<script type=\"application/shiny-prerendered\" data-context=\"server-extras\">\nojs_define <- function(..., .session = shiny::getDefaultReactiveDomain()) {\n  quos <- rlang::enquos(...)\n  vars <- rlang::list2(...)\n  nm <- names(vars)\n  if (is.null(nm)) {\n    nm <- rep_len(\"\", length(vars))\n  }\n  mapply(function(q, nm, val) {\n    # Infer name, if possible\n    if (nm == \"\") {\n      tryCatch({\n        nm <- rlang::as_name(q)\n      }, error = function(e) {\n        code <- paste(collapse = \"\\n\", deparse(rlang::f_rhs(q)))\n        stop(\"ojs_define() could not create a name for the argument: \", code)\n      })\n    }\n    .session$output[[nm]] <- val\n    outputOptions(.session$output, nm, suspendWhenHidden = FALSE)\n    .session$sendCustomMessage(\"ojs-export\", list(name = nm))\n    NULL\n  }, quos, nm, vars, SIMPLIFY = FALSE, USE.NAMES = FALSE)\n  invisible()\n}\n</script>\n",
      "preserve8ab938688762b661": "\n<script type=\"application/shiny-prerendered\" data-context=\"server\">\nlearnr:::store_exercise_cache(structure(list(label = \"first-plot\", global_setup = structure(c(\"knitr::opts_chunk$set(fig.align = \\\"center\\\", \", \n\"                      fig.height = 3, \", \"                      fig.width = 5,\", \n\"                      echo = FALSE, \", \"                      message = FALSE, \", \n\"                      warning = FALSE)\", \"\", \"library(tidyverse)\", \n\"library(infer)\", \"library(learnr)\", \"\", \"options(scipen = 999)\"\n), chunk_opts = list(label = \"setup\", include = FALSE)), setup = NULL, \n    chunks = list(list(label = \"first-plot\", code = \"ggplot(data = coaches, \\n       mapping = aes(x = ___)) \", \n        opts = list(label = \"\\\"first-plot\\\"\", exercise = \"TRUE\"), \n        engine = \"r\")), code_check = NULL, error_check = NULL, \n    check = NULL, solution = NULL, tests = NULL, options = list(\n        eval = FALSE, echo = TRUE, results = \"markup\", tidy = FALSE, \n        tidy.opts = NULL, collapse = FALSE, prompt = FALSE, comment = NA, \n        highlight = FALSE, size = \"normalsize\", background = \"#F7F7F7\", \n        strip.white = TRUE, cache = 0, cache.path = \"infer-CI-tutorial_cache/html/\", \n        cache.vars = NULL, cache.lazy = TRUE, dependson = NULL, \n        autodep = FALSE, cache.rebuild = FALSE, fig.keep = \"high\", \n        fig.show = \"asis\", fig.align = \"center\", fig.path = \"infer-CI-tutorial_files/figure-html/\", \n        dev = \"png\", dev.args = NULL, dpi = 192, fig.ext = \"png\", \n        fig.width = 5, fig.height = 3, fig.env = \"figure\", fig.cap = NULL, \n        fig.scap = NULL, fig.lp = \"fig:\", fig.subcap = NULL, \n        fig.pos = \"\", out.width = 480, out.height = NULL, out.extra = NULL, \n        fig.retina = 2, external = TRUE, sanitize = FALSE, interval = 1, \n        aniopts = \"controls,loop\", warning = FALSE, error = FALSE, \n        message = FALSE, render = NULL, ref.label = NULL, child = NULL, \n        engine = \"r\", split = FALSE, include = TRUE, purl = TRUE, \n        fenced.echo = FALSE, ft.shadow = FALSE, label = \"first-plot\", \n        exercise = TRUE, original.params.src = \"r first-plot, exercise = TRUE\", \n        chunk.echo = FALSE, code = c(\"ggplot(data = coaches, \", \n        \"       mapping = aes(x = ___)) \"), out.width.px = 480, \n        out.height.px = 288, params.src = \"r first-plot, exercise = TRUE\", \n        fig.num = 0, exercise.df_print = \"default\", exercise.checker = \"NULL\"), \n    engine = \"r\", version = \"4\"), class = c(\"r\", \"tutorial_exercise\"\n)))\n</script>\n",
      "preservea59bc19ef9f08008": "\n<script type=\"application/shiny-prerendered\" data-context=\"server\">\n`tutorial-exercise-sample-median-result` <- learnr:::setup_exercise_handler(reactive(req(input$`tutorial-exercise-sample-median-code-editor`)), session)\noutput$`tutorial-exercise-sample-median-output` <- renderUI({\n  `tutorial-exercise-sample-median-result`()\n})\n</script>\n",
      "preservec1317b97b0d1db84": "\n<script type=\"application/shiny-prerendered\" data-context=\"server\">\n`tutorial-exercise-one-resample-median-result` <- learnr:::setup_exercise_handler(reactive(req(input$`tutorial-exercise-one-resample-median-code-editor`)), session)\noutput$`tutorial-exercise-one-resample-median-output` <- renderUI({\n  `tutorial-exercise-one-resample-median-result`()\n})\n</script>\n",
      "preservec1a995f19bb0f5f6": "\n<script type=\"application/shiny-prerendered\" data-context=\"server\">\nlearnr:::store_exercise_cache(structure(list(label = \"multiple-resample-median\", global_setup = structure(c(\"knitr::opts_chunk$set(fig.align = \\\"center\\\", \", \n\"                      fig.height = 3, \", \"                      fig.width = 5,\", \n\"                      echo = FALSE, \", \"                      message = FALSE, \", \n\"                      warning = FALSE)\", \"\", \"library(tidyverse)\", \n\"library(infer)\", \"library(learnr)\", \"\", \"options(scipen = 999)\"\n), chunk_opts = list(label = \"setup\", include = FALSE)), setup = NULL, \n    chunks = list(list(label = \"multiple-resample-median\", code = \"multiple_resamples %>% \\n  \", \n        opts = list(label = \"\\\"multiple-resample-median\\\"\", exercise = \"TRUE\"), \n        engine = \"r\")), code_check = NULL, error_check = NULL, \n    check = NULL, solution = NULL, tests = NULL, options = list(\n        eval = FALSE, echo = TRUE, results = \"markup\", tidy = FALSE, \n        tidy.opts = NULL, collapse = FALSE, prompt = FALSE, comment = NA, \n        highlight = FALSE, size = \"normalsize\", background = \"#F7F7F7\", \n        strip.white = TRUE, cache = 0, cache.path = \"infer-CI-tutorial_cache/html/\", \n        cache.vars = NULL, cache.lazy = TRUE, dependson = NULL, \n        autodep = FALSE, cache.rebuild = FALSE, fig.keep = \"high\", \n        fig.show = \"asis\", fig.align = \"center\", fig.path = \"infer-CI-tutorial_files/figure-html/\", \n        dev = \"png\", dev.args = NULL, dpi = 192, fig.ext = \"png\", \n        fig.width = 5, fig.height = 3, fig.env = \"figure\", fig.cap = NULL, \n        fig.scap = NULL, fig.lp = \"fig:\", fig.subcap = NULL, \n        fig.pos = \"\", out.width = 480, out.height = NULL, out.extra = NULL, \n        fig.retina = 2, external = TRUE, sanitize = FALSE, interval = 1, \n        aniopts = \"controls,loop\", warning = FALSE, error = FALSE, \n        message = FALSE, render = NULL, ref.label = NULL, child = NULL, \n        engine = \"r\", split = FALSE, include = TRUE, purl = TRUE, \n        fenced.echo = FALSE, ft.shadow = FALSE, label = \"multiple-resample-median\", \n        exercise = TRUE, original.params.src = \"r multiple-resample-median, exercise = TRUE\", \n        chunk.echo = FALSE, code = c(\"multiple_resamples %>% \", \n        \"  \"), out.width.px = 480, out.height.px = 288, params.src = \"r multiple-resample-median, exercise = TRUE\", \n        fig.num = 0, exercise.df_print = \"default\", exercise.checker = \"NULL\"), \n    engine = \"r\", version = \"4\"), class = c(\"r\", \"tutorial_exercise\"\n)))\n</script>\n",
      "preservec34cf16ec4a2fe7c": "\n<script type=\"application/shiny-prerendered\" data-context=\"server\">\n`tutorial-exercise-load-data-result` <- learnr:::setup_exercise_handler(reactive(req(input$`tutorial-exercise-load-data-code-editor`)), session)\noutput$`tutorial-exercise-load-data-output` <- renderUI({\n  `tutorial-exercise-load-data-result`()\n})\n</script>\n",
      "preservec568d1c035ebdcd0": "\n<script type=\"application/shiny-prerendered\" data-context=\"server\">\nlearnr:::store_exercise_cache(structure(list(label = \"sample-median\", global_setup = structure(c(\"knitr::opts_chunk$set(fig.align = \\\"center\\\", \", \n\"                      fig.height = 3, \", \"                      fig.width = 5,\", \n\"                      echo = FALSE, \", \"                      message = FALSE, \", \n\"                      warning = FALSE)\", \"\", \"library(tidyverse)\", \n\"library(infer)\", \"library(learnr)\", \"\", \"options(scipen = 999)\"\n), chunk_opts = list(label = \"setup\", include = FALSE)), setup = NULL, \n    chunks = list(list(label = \"sample-median\", code = \"\", opts = list(\n        label = \"\\\"sample-median\\\"\", exercise = \"TRUE\"), engine = \"r\")), \n    code_check = NULL, error_check = NULL, check = NULL, solution = NULL, \n    tests = NULL, options = list(eval = FALSE, echo = TRUE, results = \"markup\", \n        tidy = FALSE, tidy.opts = NULL, collapse = FALSE, prompt = FALSE, \n        comment = NA, highlight = FALSE, size = \"normalsize\", \n        background = \"#F7F7F7\", strip.white = TRUE, cache = 0, \n        cache.path = \"infer-CI-tutorial_cache/html/\", cache.vars = NULL, \n        cache.lazy = TRUE, dependson = NULL, autodep = FALSE, \n        cache.rebuild = FALSE, fig.keep = \"high\", fig.show = \"asis\", \n        fig.align = \"center\", fig.path = \"infer-CI-tutorial_files/figure-html/\", \n        dev = \"png\", dev.args = NULL, dpi = 192, fig.ext = \"png\", \n        fig.width = 5, fig.height = 3, fig.env = \"figure\", fig.cap = NULL, \n        fig.scap = NULL, fig.lp = \"fig:\", fig.subcap = NULL, \n        fig.pos = \"\", out.width = 480, out.height = NULL, out.extra = NULL, \n        fig.retina = 2, external = TRUE, sanitize = FALSE, interval = 1, \n        aniopts = \"controls,loop\", warning = FALSE, error = FALSE, \n        message = FALSE, render = NULL, ref.label = NULL, child = NULL, \n        engine = \"r\", split = FALSE, include = TRUE, purl = TRUE, \n        fenced.echo = FALSE, ft.shadow = FALSE, label = \"sample-median\", \n        exercise = TRUE, original.params.src = \"r sample-median, exercise = TRUE\", \n        chunk.echo = FALSE, code = \"\", out.width.px = 480, out.height.px = 288, \n        params.src = \"r sample-median, exercise = TRUE\", fig.num = 0L, \n        exercise.df_print = \"default\", exercise.checker = \"NULL\"), \n    engine = \"r\", version = \"4\"), class = c(\"r\", \"tutorial_exercise\"\n)))\n</script>\n",
      "preservec67789d5672d9bd5": "\n<script type=\"application/shiny-prerendered\" data-context=\"server-start\">\nknitr::opts_chunk$set(fig.align = \"center\", \n                      fig.height = 3, \n                      fig.width = 5,\n                      echo = FALSE, \n                      message = FALSE, \n                      warning = FALSE)\n\nlibrary(tidyverse)\nlibrary(infer)\nlibrary(learnr)\n\noptions(scipen = 999)\n</script>\n",
      "preservecbaebcb78a010c48": "\n<script type=\"application/shiny-prerendered\" data-context=\"server\">\nlearnr:::store_exercise_cache(structure(list(label = \"get-CI\", global_setup = structure(c(\"knitr::opts_chunk$set(fig.align = \\\"center\\\", \", \n\"                      fig.height = 3, \", \"                      fig.width = 5,\", \n\"                      echo = FALSE, \", \"                      message = FALSE, \", \n\"                      warning = FALSE)\", \"\", \"library(tidyverse)\", \n\"library(infer)\", \"library(learnr)\", \"\", \"options(scipen = 999)\"\n), chunk_opts = list(label = \"setup\", include = FALSE)), setup = NULL, \n    chunks = list(list(label = \"get-CI\", code = \"coaches_CI <- coaches_resample %>% \\n  get_confidence_interval(level = ___, type = ___)\", \n        opts = list(label = \"\\\"get-CI\\\"\", exercise = \"TRUE\"), \n        engine = \"r\")), code_check = NULL, error_check = NULL, \n    check = NULL, solution = NULL, tests = NULL, options = list(\n        eval = FALSE, echo = TRUE, results = \"markup\", tidy = FALSE, \n        tidy.opts = NULL, collapse = FALSE, prompt = FALSE, comment = NA, \n        highlight = FALSE, size = \"normalsize\", background = \"#F7F7F7\", \n        strip.white = TRUE, cache = 0, cache.path = \"infer-CI-tutorial_cache/html/\", \n        cache.vars = NULL, cache.lazy = TRUE, dependson = NULL, \n        autodep = FALSE, cache.rebuild = FALSE, fig.keep = \"high\", \n        fig.show = \"asis\", fig.align = \"center\", fig.path = \"infer-CI-tutorial_files/figure-html/\", \n        dev = \"png\", dev.args = NULL, dpi = 192, fig.ext = \"png\", \n        fig.width = 5, fig.height = 3, fig.env = \"figure\", fig.cap = NULL, \n        fig.scap = NULL, fig.lp = \"fig:\", fig.subcap = NULL, \n        fig.pos = \"\", out.width = 480, out.height = NULL, out.extra = NULL, \n        fig.retina = 2, external = TRUE, sanitize = FALSE, interval = 1, \n        aniopts = \"controls,loop\", warning = FALSE, error = FALSE, \n        message = FALSE, render = NULL, ref.label = NULL, child = NULL, \n        engine = \"r\", split = FALSE, include = TRUE, purl = TRUE, \n        fenced.echo = FALSE, ft.shadow = FALSE, label = \"get-CI\", \n        exercise = TRUE, original.params.src = \"r get-CI, exercise = TRUE\", \n        chunk.echo = FALSE, code = c(\"coaches_CI <- coaches_resample %>% \", \n        \"  get_confidence_interval(level = ___, type = ___)\"), \n        out.width.px = 480, out.height.px = 288, params.src = \"r get-CI, exercise = TRUE\", \n        fig.num = 0, exercise.df_print = \"default\", exercise.checker = \"NULL\"), \n    engine = \"r\", version = \"4\"), class = c(\"r\", \"tutorial_exercise\"\n)))\n</script>\n",
      "preservece3c379f4dc86cab": "\n<script type=\"application/shiny-prerendered\" data-context=\"server\">\n`tutorial-exercise-first-plot-result` <- learnr:::setup_exercise_handler(reactive(req(input$`tutorial-exercise-first-plot-code-editor`)), session)\noutput$`tutorial-exercise-first-plot-output` <- renderUI({\n  `tutorial-exercise-first-plot-result`()\n})\n</script>\n",
      "preserveef7f9fef4b870a4b": "\n<script type=\"application/shiny-prerendered\" data-context=\"server\">\nlearnr:::store_exercise_cache(structure(list(label = \"one-resample\", global_setup = structure(c(\"knitr::opts_chunk$set(fig.align = \\\"center\\\", \", \n\"                      fig.height = 3, \", \"                      fig.width = 5,\", \n\"                      echo = FALSE, \", \"                      message = FALSE, \", \n\"                      warning = FALSE)\", \"\", \"library(tidyverse)\", \n\"library(infer)\", \"library(learnr)\", \"\", \"options(scipen = 999)\"\n), chunk_opts = list(label = \"setup\", include = FALSE)), setup = NULL, \n    chunks = list(list(label = \"one-resample\", code = \"one_resample <- rep_sample_n(coaches, \\n                             size = ___, \\n                             replace = ___)\", \n        opts = list(label = \"\\\"one-resample\\\"\", exercise = \"TRUE\"), \n        engine = \"r\")), code_check = NULL, error_check = NULL, \n    check = NULL, solution = NULL, tests = NULL, options = list(\n        eval = FALSE, echo = TRUE, results = \"markup\", tidy = FALSE, \n        tidy.opts = NULL, collapse = FALSE, prompt = FALSE, comment = NA, \n        highlight = FALSE, size = \"normalsize\", background = \"#F7F7F7\", \n        strip.white = TRUE, cache = 0, cache.path = \"infer-CI-tutorial_cache/html/\", \n        cache.vars = NULL, cache.lazy = TRUE, dependson = NULL, \n        autodep = FALSE, cache.rebuild = FALSE, fig.keep = \"high\", \n        fig.show = \"asis\", fig.align = \"center\", fig.path = \"infer-CI-tutorial_files/figure-html/\", \n        dev = \"png\", dev.args = NULL, dpi = 192, fig.ext = \"png\", \n        fig.width = 5, fig.height = 3, fig.env = \"figure\", fig.cap = NULL, \n        fig.scap = NULL, fig.lp = \"fig:\", fig.subcap = NULL, \n        fig.pos = \"\", out.width = 480, out.height = NULL, out.extra = NULL, \n        fig.retina = 2, external = TRUE, sanitize = FALSE, interval = 1, \n        aniopts = \"controls,loop\", warning = FALSE, error = FALSE, \n        message = FALSE, render = NULL, ref.label = NULL, child = NULL, \n        engine = \"r\", split = FALSE, include = TRUE, purl = TRUE, \n        fenced.echo = FALSE, ft.shadow = FALSE, label = \"one-resample\", \n        exercise = TRUE, original.params.src = \"r one-resample, exercise = TRUE\", \n        chunk.echo = FALSE, code = c(\"one_resample <- rep_sample_n(coaches, \", \n        \"                             size = ___, \", \"                             replace = ___)\"\n        ), out.width.px = 480, out.height.px = 288, params.src = \"r one-resample, exercise = TRUE\", \n        fig.num = 0, exercise.df_print = \"default\", exercise.checker = \"NULL\"), \n    engine = \"r\", version = \"4\"), class = c(\"r\", \"tutorial_exercise\"\n)))\n</script>\n",
      "preserveef8f4bd992d47da5": "\n<script type=\"application/shiny-prerendered\" data-context=\"server\">\nlearnr:::store_exercise_cache(structure(list(label = \"one-resample-median\", global_setup = structure(c(\"knitr::opts_chunk$set(fig.align = \\\"center\\\", \", \n\"                      fig.height = 3, \", \"                      fig.width = 5,\", \n\"                      echo = FALSE, \", \"                      message = FALSE, \", \n\"                      warning = FALSE)\", \"\", \"library(tidyverse)\", \n\"library(infer)\", \"library(learnr)\", \"\", \"options(scipen = 999)\"\n), chunk_opts = list(label = \"setup\", include = FALSE)), setup = NULL, \n    chunks = list(list(label = \"one-resample-median\", code = \"\", \n        opts = list(label = \"\\\"one-resample-median\\\"\", exercise = \"TRUE\"), \n        engine = \"r\")), code_check = NULL, error_check = NULL, \n    check = NULL, solution = NULL, tests = NULL, options = list(\n        eval = FALSE, echo = TRUE, results = \"markup\", tidy = FALSE, \n        tidy.opts = NULL, collapse = FALSE, prompt = FALSE, comment = NA, \n        highlight = FALSE, size = \"normalsize\", background = \"#F7F7F7\", \n        strip.white = TRUE, cache = 0, cache.path = \"infer-CI-tutorial_cache/html/\", \n        cache.vars = NULL, cache.lazy = TRUE, dependson = NULL, \n        autodep = FALSE, cache.rebuild = FALSE, fig.keep = \"high\", \n        fig.show = \"asis\", fig.align = \"center\", fig.path = \"infer-CI-tutorial_files/figure-html/\", \n        dev = \"png\", dev.args = NULL, dpi = 192, fig.ext = \"png\", \n        fig.width = 5, fig.height = 3, fig.env = \"figure\", fig.cap = NULL, \n        fig.scap = NULL, fig.lp = \"fig:\", fig.subcap = NULL, \n        fig.pos = \"\", out.width = 480, out.height = NULL, out.extra = NULL, \n        fig.retina = 2, external = TRUE, sanitize = FALSE, interval = 1, \n        aniopts = \"controls,loop\", warning = FALSE, error = FALSE, \n        message = FALSE, render = NULL, ref.label = NULL, child = NULL, \n        engine = \"r\", split = FALSE, include = TRUE, purl = TRUE, \n        fenced.echo = FALSE, ft.shadow = FALSE, label = \"one-resample-median\", \n        exercise = TRUE, original.params.src = \"r one-resample-median, exercise = TRUE\", \n        chunk.echo = FALSE, code = \"\", out.width.px = 480, out.height.px = 288, \n        params.src = \"r one-resample-median, exercise = TRUE\", \n        fig.num = 0L, exercise.df_print = \"default\", exercise.checker = \"NULL\"), \n    engine = \"r\", version = \"4\"), class = c(\"r\", \"tutorial_exercise\"\n)))\n</script>\n",
      "preservef4b1331baa264add": "\n<script type=\"application/shiny-prerendered\" data-context=\"server\">\n`tutorial-exercise-infer-exercise-result` <- learnr:::setup_exercise_handler(reactive(req(input$`tutorial-exercise-infer-exercise-code-editor`)), session)\noutput$`tutorial-exercise-infer-exercise-output` <- renderUI({\n  `tutorial-exercise-infer-exercise-result`()\n})\n</script>\n",
      "preservefeb7c6a8e86be401": "\n<script type=\"application/shiny-prerendered\" data-context=\"server\">\nlearnr:::prepare_tutorial_state(session)\n</script>\n",
      "preservefef97835a15de412": "\n<script type=\"application/shiny-prerendered\" data-context=\"server\">\n`tutorial-exercise-multiple-resample-median-result` <- learnr:::setup_exercise_handler(reactive(req(input$`tutorial-exercise-multiple-resample-median-code-editor`)), session)\noutput$`tutorial-exercise-multiple-resample-median-output` <- renderUI({\n  `tutorial-exercise-multiple-resample-median-result`()\n})\n</script>\n"
    },
    "postProcess": true
  }
}
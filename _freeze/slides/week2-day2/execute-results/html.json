{
  "hash": "5bd3cee8c59e19616af2b26c13c032c9",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Exploring Flight Delays\"\nformat: \n  revealjs:\n    theme: style.scss\neditor: source\nexecute: \n  echo: false\n---\n\n::: {.cell}\n\n:::\n\n\n\n# Lab 1\n\n## Plotting Your Data\n\nNow that we've practiced making some plots, we know...\n\n:::: small\n`mapping = aes(y = manufacturer, x = hwy)` declares what variables are plotted\non the x- and y-axis.\n\n::: callout-tip\nThe variable names you put insides `aes()` must be [**identical**]{.underline}\nto the names of the variables in the dataset!\n:::\n::::\n\n. . .\n\n</br>\n\n:::: small\n`labs(x = \"Highway Miles Per Gallon\", y = \"Car Manufacturer\")` declares new \nx-axis and y-axis labels for the plot.\n\n::: callout-tip\nIncluding nice axis labels (with their units) is a critical part of [**every**]{.underline} visualization we make!\n:::\n::::\n\n## R Tips and Tricks!\n\nThings you should know before you start coding in the wild. \n\n::: {.incremental}\n::: {.small}\n- R is case sensitive \n    * `geom_boxplot()` **not** `Geom_boxplot()`\n- Spelling matters!\n    * `nycflights` **not** `ncyflights`\n- Parentheses are tricky! \n    * You will want to triple check that each beginning parenthesis `(` has a counterpart `)`. \n\n:::\n:::\n\n. . .\n\n::: {.small}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = penguins, \n       mapping = aes(x = bill_length_mm, y = bill_depth_mm) +\n  geom_point()\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: <text>:5:0: unexpected end of input\n3:   geom_point()\n4: \n  ^\n```\n\n\n:::\n:::\n\n\n:::\n\n<!-- ##  {background-color=\"#D4D4D4\"} -->\n\n<!-- ```{r packages} -->\n<!-- library(tidyverse) -->\n<!-- library(kableExtra) -->\n<!-- ``` -->\n\n<!-- ::: {style=\"font-size: 2em; color: #0F4C81;\"} -->\n<!-- Suppose... -->\n<!-- ::: -->\n\n<!-- > [\"Overall this instructor was educationally effective.\"]{style=\"color: #ed8402;\"} -->\n\n<!-- . . . -->\n\n<!-- ::: {.midi} -->\n<!-- ```{r} -->\n<!-- #| echo: false -->\n<!-- #| label:  table-of-eval-scores -->\n\n<!-- evals <- tibble(  -->\n<!--   year = c(rep(2021, 2), rep(2022, 5) ),  -->\n<!--   quarter = c(rep(\"Fall\", 2),  -->\n<!--               rep(\"Winter\", 2),  -->\n<!--               rep(\"Spring\", 3)  -->\n<!--               ), -->\n<!--   average = c(4.53, 4.36, 4.18, 4.24, 4.83, 4.41, 4)  -->\n<!--   ) -->\n\n<!-- kable(evals) %>%  -->\n<!--   kable_styling(stripe_color = \"light blue\") -->\n<!-- ``` -->\n<!-- ::: -->\n\n<!-- ##  -->\n\n<!-- </br> -->\n\n<!-- <center> -->\n\n<!-- ::: {style=\"font-size: 3.5em; color: #ed8402;\"} -->\n<!-- How were those averages calculated? -->\n<!-- ::: -->\n\n<!-- </center> -->\n\n<!-- ##  -->\n\n<!-- </br> -->\n\n<!-- <center> -->\n\n<!-- ::: {style=\"font-size: 3.5em; color: #ed8402;\"} -->\n<!-- What do these averages mean? -->\n<!-- ::: -->\n\n<!-- </center> -->\n\n<!-- ##  -->\n\n<!-- </br> -->\n\n<!-- <center> -->\n\n<!-- ::: {style=\"font-size: 3.5em; color: #0F4C81;\"} -->\n<!-- What statistic(s) should be used instead? -->\n<!-- ::: -->\n\n<!-- </center> -->\n\n<!-- ##  -->\n\n<!-- ::: {style=\"font-size: 3.5em; color: #000000;\"} -->\n<!-- Averagarianism -->\n<!-- ::: -->\n\n<!-- ::: {style=\"font-size: 0.75em; color: #000000;\"} -->\n<!-- > \"The primary research method of averagarianism is [aggregate, then analyze]{style=\"color: #ed8402;\"}: First, [combine many people together and look for patterns in the group]{style=\"color: #ed8402;\"}. Then, use these group patterns (such as averages and other statistics) to analyze and model individuals. The science of the individual instead instructs scientists to analyze, then aggregate: First, look for pattern within each individual. Then, look for ways to combine these individual patterns into collective insight.\" -->\n<!-- > -->\n<!-- > *The End of Average* by Todd Rose -->\n<!-- ::: -->\n\n<!-- ##  {background-color=\"#D4D4D4\"} -->\n\n<!-- ::: {style=\"font-size: 3.5em; color: #000000;\"} -->\n<!-- Some Rules to Play By -->\n<!-- ::: -->\n\n<!-- </br> -->\n\n<!-- :::: {style=\"color: #000000;\"} -->\n<!-- ::: incremental -->\n<!-- -   Look at and understand your data before aggregating! -->\n<!-- -   Should the variables that are numerical **actually** numerical? -->\n<!-- -   Consider what statistic is the most appropriate for the question. -->\n<!-- ::: -->\n<!-- :::: -->\n\n# Lab 2\n\n## Departure Delays\n\n-   Inspect the `nycflights` dataset\n-   Visualize departure delays\n-   Play with histogram `binwidth`\n-   `filter()` data to include only certain flights\n-   `calculate()` summary statistics\n-   Make decisions based on summary statistics\n-   Compare summary statistics to a visualization\n\n# Working in Groups \n\n![](images/cats-programming.jpg){fig-alt=\"Two cats staring at a computer screen, in a dimly lit room. The computer screen is displaying a picture of a cat.\"}\n\n## Cooperative Learning\n\nis a structured form of small-group learning.\n\n. . .\n\n</br>\n\n-   Roles relate to **how** the work should be done\n\n    -   Roles **are not** about breaking up the work intellectually\n\n. . .\n\n-   Roles allow each person to contribute to the group in significant ways\n\n    -   Each person's participation is necessary to complete the task\n\n## Group Roles\n\n::: columns\n::: {.column width=\"44%\"}\n**Recorder** -- *Manages in-class report*\n\n::: {.fragment}\n::: {.small}\n-   Talks with Resource Manager about ideas related to ways they could solve the\nproblem.\n-   Responsible for organizing and recording answers to the assignment during\ndiscussions.\n-   Compiles a summary of the solutions discussed.\n-   Submits final assignment.\n:::\n:::\n:::\n\n::: {.column width=\"2%\"}\n:::\n\n::: {.column width=\"54%\"}\n**Resource Manager** -- *Manages resources for coding / statistical tasks*\n\n::: {.fragment}\n::: {.small}\n-   Reads prompt and ensures Recorder understands what the problem is asking. \n-   Asks group questions to Dr. Theobold. \n-   Manages resources (e.g., cheatsheets, textbook, tutorials) for aiding in\nsolution strategy. \n-   Leads discussion and encourages participation from Recorder.\n-   Brings conversation back if it deviates.\n:::\n:::\n:::\n\n:::\n\n## Group Roles\n\n::: columns\n::: {.column width=\"47%\"}\n**Recorder** -- *Manages in-class report*\n\n::: {.small}\n-   **Does not** ask the Resource Manager to solve the problem. \n-   **Does not** ask the Resource Manager to write the code for them. \n:::\n:::\n\n::: {.column width=\"2%\"}\n:::\n\n::: {.column width=\"51%\"}\n**Resource Manager** -- *Evaluates solution strategy*\n\n::: {.small}\n-   **Does not** solve the problem themselves. \n-   **Does not** tell the Recorder what to type.\n-   **Does not** type for the Recorder. \n:::\n:::\n\n:::\n\n. . .\n\n::: {.small}\n-   Helping someone means explaining your thinking **not** giving answers or doing the work for them\n\n-   Provide a justification when you make a statement\n\n-   Think and work together -- don't divide up the work\n\n-   No cross talk with other groups\n:::\n\n# Find Your Group! \n\n![](images/canvas-groups.png){fig-alt=\"Screenshot of Canvas homepage noting with an arrow where the Groups a student is in can be found.\"}\n\n## Accessing Lab 1\n\n::: {.midi}\n**Step 1:** Both members of your group need to [follow these instructions to join your group workspace.](https://scribehow.com/shared/Joining_your_SGROUP_workspace__KnGc1NYfQqGcEmgoMwTQHQ)\n:::\n\n. . .\n\n::: {.small}\n::: {.callout-note}\n# Roles\nThe person who was assigned to be the group \"leader\" will act as the Recorder\nfor your group (this week). \n:::\n:::\n\n. . .\n\n::: {.midi}\n**Step 2:** The Recorder [follows these instructions to copy the Lab 2 project into your group's workspace]()\n:::\n\n. . .\n\n::: {.midi}\n**Step 3:** Both members open the Lab 2 assignment in your group workspace!\n:::\n\n. . .\n\n::: {.midi}\n**Step 4:** Follow the [final instructions](https://scribehow.com/shared/Moving_Files_in_Posit_Cloud_for_STAT_218_Copy__Q3uBlpp_TBWRZzVJmCjbsA) to activate collaborative editing in the document. \n:::\n\n## R Resources\n\n![](images/week-2-resources.png)",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
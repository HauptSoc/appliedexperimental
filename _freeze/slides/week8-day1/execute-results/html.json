{
  "hash": "344e47450b1433656b8763585d086683",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"ðŸ”¬ Simulation-Based Methods versus Theory-Based Methods\"\nformat: \n  revealjs:\n    theme: style.scss\neditor: source\n---\n\n::: {.cell}\n\n:::\n\n\n\n# Lab 6 Recap\n\n## Common Mistakes\n\n</br>\n\n\n\n\n# The conclusions we reach depend on our p-value and confidence intervale being reliable.\n\n# The conclusions we reach depend on our p-value and confidence intervale being reliable.\n\nHow can we know if our p-value is reliable?\n\n## Model Conditions\n\nFor our p-value to be trustworthy, we need to know that the conditions of our model are not violated.\n\n. . .\n\n:::::: columns\n::: {.column width=\"40%\"}\nFor linear regression we are assuming...\n:::\n\n::: {.column width=\"5%\"}\n:::\n\n::: {.column width=\"55%\"}\n**L**inear relationship between $x$ and $y$\n\n</br>\n\n**I**ndependent observations\n\n</br>\n\n**N**ormality of residuals\n\n</br>\n\n**E**qual variance of residuals\n:::\n::::::\n\n## What happens if the conditions are violated?\n\nIn general, when the conditions associated with these methods are violated, we will [underestimate]{.underline} the true standard error (spread) of the sampling distribution.\n\n. . .\n\n-   Our p-values will be **too** small!\n-   Our confidence intervals will be **too** narrow!\n-   We will make more Type I errors than we expect!\n\n## \n\n::: {style=\"font-size: 2em; color: #000000;\"}\n**L**inear relationship between $x$ and $y$\n:::\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](week8-day1_files/figure-revealjs/unnamed-chunk-1-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n. . .\n\n***What should we do?***\n\n## \n\n::: {style=\"font-size: 2em; color: #000000;\"}\nVariable transformation!\n:::\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](week8-day1_files/figure-revealjs/transform-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n## \n\n::: {style=\"font-size: 2em; color: #000000;\"}\n**I**ndependence of observations\n:::\n\n::::::: columns\n::: {.column width=\"40%\"}\nThe `evals` dataset contains 463 observations on 94 professors. Meaning, professors have **multiple** observations.\n\n</br>\n\n***What should we do?***\n:::\n\n::: {.column width=\"5%\"}\n:::\n\n:::: {.column width=\"55%\"}\n::: fragment\n**Best** -- use a random effects model\n\n**Reasonable** -- collapse the multiple scores into a single score\n:::\n::::\n:::::::\n\n## \n\n::: {style=\"font-size: 2em; color: #000000;\"}\n**E**qual variance of residuals\n:::\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](week8-day1_files/figure-revealjs/non-constant-variance-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n. . .\n\n***What should we do?***\n\n## \n\n::: {style=\"font-size: 2em; color: #000000;\"}\nVariable transformation!\n:::\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](week8-day1_files/figure-revealjs/unnamed-chunk-2-1.png){width=960}\n:::\n:::\n\n\n\n## \n\n::: {style=\"font-size: 2em; color: #000000;\"}\n**N**ormality of residuals\n:::\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](week8-day1_files/figure-revealjs/non-normal-1.png){width=960}\n:::\n:::\n\n\n\n. . .\n\n***What should we do?***\n\n## \n\n::: {style=\"font-size: 2em; color: #000000;\"}\nVariable transformation!\n:::\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](week8-day1_files/figure-revealjs/normal-1.png){width=960}\n:::\n:::\n\n\n\n## What if we can't fix a condition being violated?\n\n. . .\n\n::::::: columns\n::: {.column width=\"45%\"}\nFor the **L**, **I**, and **E** conditions...\n\nwe need to ask for help!\n:::\n\n::: {.column width=\"5%\"}\n:::\n\n:::: {.column width=\"45%\"}\n::: fragment\nFor the **N** condition...\n\nwe need to use simulation instead of mathematical formulas to get our p-value and confidence interval.\n:::\n::::\n:::::::\n\n# Simulation-Based Methods versus Theory-Based Methods\n\n## Mathematical / Theory-based Methods\n\n::: incremental\n-   Are a \"simpler\" approach\n-   Use formulas instead of simulation to obtain standard error\n-   Use $t$-distribution to get p-value and confidence interval\n-   Require that the residuals are normally distributed\n:::\n\n## How does this look?\n\n:::: panel-tabset\n## Before\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\nobs_slope <- evals %>% \n  specify(response = score, \n          explanatory = bty_avg) %>% \n  calculate(stat = \"slope\")\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n   bty_avg \n0.06663704 \n```\n\n\n:::\n:::\n\n\n\n## Now\n\n::: smaller\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\nevals_lm <- lm(score ~ bty_avg, data = evals)\n\nget_regression_table(evals_lm)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 Ã— 7\n  term      estimate std_error statistic p_value lower_ci upper_ci\n  <chr>        <dbl>     <dbl>     <dbl>   <dbl>    <dbl>    <dbl>\n1 intercept    3.88      0.076     51.0        0    3.73     4.03 \n2 bty_avg      0.067     0.016      4.09       0    0.035    0.099\n```\n\n\n:::\n:::\n\n\n:::\n\n\n\n\n\n\n::::\n\n## \n\n::: {style=\"font-size: 2em; color: #000000;\"}\nHow did R calculate the $t$-statistic?\n:::\n\n::::::: panel-tabset\n## Step 1: SE\n\n:::::: columns\n::: {.column width=\"40%\"}\n$SE_{b_1} = \\frac{\\frac{s_y}{s_x} \\cdot \\sqrt{1 - r^2}}{\\sqrt{n - 2}}$\n:::\n\n::: {.column width=\"5%\"}\n:::\n\n::: {.column width=\"55%\"}\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.01495204\n```\n\n\n:::\n:::\n\n\n:::\n::::::\n\n## Step 2: t-statistic\n\n$t = \\frac{b_1}{SE_{b_1}} = \\frac{0.067}{0.014952} = 4.4809947$\n\n## Proof!\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 Ã— 7\n  term      estimate std_error statistic p_value lower_ci upper_ci\n  <chr>        <dbl>     <dbl>     <dbl>   <dbl>    <dbl>    <dbl>\n1 intercept    3.88      0.076     51.0        0    3.73     4.03 \n2 bty_avg      0.067     0.016      4.09       0    0.035    0.099\n```\n\n\n:::\n:::\n\n\n:::::::\n\n## How does R calculate the p-value?\n\n. . .\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](week8-day1_files/figure-revealjs/unnamed-chunk-9-1.png){fig-align='center' width=50%}\n:::\n:::\n\n\n\n. . .\n\n::: callout-note\n# Different $t$-distributions\n\nA $t$-distribution has a *slightly* different shape depending on the sample size. Technically, we are using a $t$-distribution with $n - 2$ degrees of freedom to get our p-value.\n:::\n\n# Did we get similar results between these methods?\n\n# Did we get similar results between these methods?\n\nWhy do you think that is?\n\n## Approximating the permutation distribution\n\n:::::: columns\n::: {.column width=\"40%\"}\nA $t$-distribution can be a reasonable approximation for the permutation distribution [if the normality condition is not violated]{.underline}.\n:::\n\n::: {.column width=\"5%\"}\n:::\n\n::: {.column width=\"55%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](week8-day1_files/figure-revealjs/t-distribution-1.png){width=960}\n:::\n:::\n\n\n:::\n::::::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
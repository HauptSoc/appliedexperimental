{
  "hash": "2bca21ec8861e25fd05a579f264fa9e0",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Midterm Project Feedback & Machine Learning\"\nauthor: \"STAT 313\"\nformat: revealjs\neditor: visual\n---\n\n\n## Deadline Reminders\n\n-   Lab 4 revisions are due tonight\n-   Statistical Critique 1 revisions are due tonight\n-   The final version of your Midterm Project is due Sunday at midnight\n\n::: callout-important\n# Deadline Extensions\n\nYou **cannot** request deadline extensions for the final version of your Midterm Project. The assignment portal closes at 11:59pm on Sunday. **Do not ride the line.**\n:::\n\n# Midterm Project Review\n\n## Help your peers!\n\n-   Are the arguments / sentences easy to understand? Does the report flow?\n\n-   Is the same information included in multiple places?\n\n-   Do the plots have nice axis labels?\n\n-   Can you easily find the regression equations? Do the equations make sense?\n\n-   Do the interpretations / conclusions from the equations make sense?\n\n# Peer Feedback\n\n# Study Limitations\n\n## Based on how the study was designed, what population can you infer these results onto?\n\n. . .\n\n</br>\n\n**Justify** what population you believe your analysis can be inferred onto.\n\n-   The sample of \\[possums / professors / crabs\\]?\n-   Some larger population of \\[possums / professors / crabs\\]?\n\nYour justification needs to connect with how the researchers collected their data!\n\n## Based on how the study was designed, what can you say about the relationships between the variables?\n\n</br>\n\n. . .\n\nStating that the study was \"observational\" doesn't tell me that you understand what would be required to use cause-and-effect language!\n\n-   What **specifically** would have the researchers have needed to do in order to use causal language?\n\n<!-- ##  {background-color=\"black\" background-image=\"images/glamour-of-graphics.jpg\" background-size=\"contain\"} -->\n\n<!-- ::: {style=\"font-size: 3em; color: #ed8402;\"} -->\n\n<!-- Better Practices for Data Visualization -->\n\n<!-- ::: -->\n\n<!-- ## Some Guidelines -->\n\n<!-- ::: columns -->\n\n<!-- ::: {.column width=\"40%\"} -->\n\n<!-- -   Titles should be top left aligned (usually) -->\n\n<!-- -   Don’t make people tilt their head -->\n\n<!-- -   Alignment should create clean lines and symmetry -->\n\n<!-- -   Remove and lighten grids as much as possible -->\n\n<!-- ::: -->\n\n<!-- ::: {.column width=\"5%\"} -->\n\n<!-- ::: -->\n\n<!-- ::: {.column width=\"55%\"} -->\n\n<!-- -   Legends suck -->\n\n<!-- -   Whitespace is like garlic; take the amount you need and then triple it -->\n\n<!-- -   Fonts matter -->\n\n<!-- -   Color is hard -->\n\n<!-- ::: -->\n\n<!-- ::: -->\n\n<!-- ## Some Guidelines -->\n\n<!-- ::: columns -->\n\n<!-- ::: {.column width=\"40%\"} -->\n\n<!-- -   Titles should be top left aligned (usually) -->\n\n<!-- -   [Don’t make people tilt their head]{style=\"color: #ed8402;\"} -->\n\n<!-- -   Alignment should create clean lines and symmetry -->\n\n<!-- -   [Remove and lighten grids as much as possible]{style=\"color: #ed8402;\"} -->\n\n<!-- ::: -->\n\n<!-- ::: {.column width=\"5%\"} -->\n\n<!-- ::: -->\n\n<!-- ::: {.column width=\"55%\"} -->\n\n<!-- -   Legends suck -->\n\n<!-- -   Whitespace is like garlic; take the amount you need and then triple it -->\n\n<!-- -   Fonts matter -->\n\n<!-- -   [Color is hard]{style=\"color: #ed8402;\"} -->\n\n<!-- ::: -->\n\n<!-- ::: -->\n\n<!-- ## Don’t make people [tilt]{style=\"color: #34605f;\"} their head -->\n\n<!-- ![](images/plot-title.png) -->\n\n<!-- ## Tailoring Colors -->\n\n<!-- Different color palettes are available through a variety of R packages. Popular options include: -->\n\n<!-- ::: columns -->\n\n<!-- ::: {.column width=\"47%\"} -->\n\n<!-- ::: fragment -->\n\n<!-- [RColorBrewer](https://r-graph-gallery.com/38-rcolorbrewers-palettes.html) -->\n\n<!-- ![](images/color-brewer.png) -->\n\n<!-- ::: -->\n\n<!-- ::: -->\n\n<!-- ::: {.column width=\"3%\"} -->\n\n<!-- ::: -->\n\n<!-- ::: {.column width=\"47%\"} -->\n\n<!-- ::: fragment -->\n\n<!-- [viridis](https://cran.r-project.org/web/packages/viridis/vignettes/intro-to-viridis.html) -->\n\n<!-- ![](images/viridis.png) -->\n\n<!-- ::: -->\n\n<!-- ::: -->\n\n<!-- ::: -->\n\n<!-- . . . -->\n\n<!-- [This website](https://github.com/EmilHvitfeldt/r-color-palettes) provides an exhaustive list of color themes. -->\n\n<!-- ## Grids: [remove and lighten]{style=\"color: #34605f;\"} as much as possible -->\n\n<!-- ![](images/backgrounds.png) -->\n\n<!-- ## A Reasonable Option -- `theme_minimal()` -->\n\n<!-- </br> -->\n\n<!-- ```{r} -->\n\n<!-- #| label: example-theme-minimal -->\n\n<!-- library(tidyverse) -->\n\n<!-- library(openintro) -->\n\n<!-- library(ggridges) -->\n\n<!-- library(lterdatasampler) -->\n\n<!-- ggplot(data = nycflights,  -->\n\n<!--        mapping = aes(x = dep_delay)) + -->\n\n<!--   geom_histogram() + -->\n\n<!--   labs(x = \"Departure Delays (min)\",  -->\n\n<!--       y = \"\",  -->\n\n<!--       title = \"Number of Delayed Flights Leaving NYC Airports\") + -->\n\n<!--   theme_minimal() -->\n\n<!-- ``` -->\n\n<!-- ## An Example for Categorical -->\n\n<!-- ```{r} -->\n\n<!-- #| label: example-color-discrete -->\n\n<!-- #| echo: true -->\n\n<!-- #| output-location: slide -->\n\n<!-- and_vertebrates %>%  -->\n\n<!--   ggplot(mapping = aes(x = length_1_mm,  -->\n\n<!--                      y = weight_g,  -->\n\n<!--                      color = species)) + -->\n\n<!--   geom_point(alpha = 0.5) + -->\n\n<!--   labs(x = \"Length (mm)\",  -->\n\n<!--       y = \"\",  -->\n\n<!--       color = \"Species\", -->\n\n<!--       title = \"Comparing Weight (g) versus Length (mm)\", -->\n\n<!--       subtitle = \"for Different Vertebrate Species in Mack Creek\") + -->\n\n<!--   theme_minimal() + -->\n\n<!--   scale_color_brewer(palette = \"Dark2\") -->\n\n<!-- ``` -->\n\n<!-- ## An Example for Continuous -->\n\n<!-- ```{r} -->\n\n<!-- #| label: example-color-gradient -->\n\n<!-- #| echo: true -->\n\n<!-- #| output-location: slide -->\n\n<!-- pie_crab %>%  -->\n\n<!--   ggplot(mapping = aes(x = latitude,  -->\n\n<!--                      y = size,  -->\n\n<!--                      color = water_temp)) + -->\n\n<!--   geom_point(alpha = 0.5) + -->\n\n<!--   labs(x = \"Latitude\",  -->\n\n<!--       y = \"\",  -->\n\n<!--       color = \"Water Temperature (C)\", -->\n\n<!--       title = \"Size of Fiddler Crabs (mm) Across the Atlantic Coast\") + -->\n\n<!--   theme_minimal() + -->\n\n<!--   scale_color_viridis_c(option = \"magma\", direction = -1) -->\n\n<!-- ``` -->\n\n# Machine Learning\n\n# Machine Learning\n\n> \"the use and development of computer systems that are able to learn and adapt without following explicit instructions, by using algorithms and statistical models to analyze and draw inferences from patterns in data\"\n\n##  {background-color=\"#B6CADA\"}\n\n</br>\n\n<center>\n\n::: {style=\"font-size: 5em; color: #000000;\"}\n**Data is Power**\n:::\n\n</center>\n\n## Does your phone recognize your face?\n\n![Joy Buolamwini found that she had to put on a white mask for the facial detection program to \"see\" her face.](images/buolamwini.jpg)\n\n## How does Google label your images?\n\n![](images/google.png)\n\n## Should the cash bail system change?\n\n![](images/prop-25.png)\n\n## Will your car be able to drive you?\n\n![](images/cars.jpg)\n\n# Lab 6\n\n## Forward Selection (by Hand)\n\n1.  Start with the most basic model (one mean)\n\n2.  Decide which **one** variable to add (based on adjusted $R^2$)\n\n3.  Decide if you should add another variable\n\n$\\vdots$\n\n4.  Stop adding variables when adjusted $R^2$ stops increasing\n\n## A More Automated Option\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|2,6,7\"}\nevals_train %>% \n  map(.f = ~lm(score ~ .x + <VARIABLES SELECTED>, data = evals_train)) %>% \n  map_df(.f = ~get_regression_summaries(.x)$adj_r_squared) %>% \n  select(-ID, \n         -score,\n         -<VARIABLE 1 SELECTED>,\n         -<VARIABLE 2 SELECTED>\n         ) %>% \n  pivot_longer(cols = everything(), \n               names_to = \"variable\", \n               values_to = \"adj_r_sq\") %>% \n  slice_max(adj_r_sq)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
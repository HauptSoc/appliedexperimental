{
  "hash": "c5e0b76bc98f7c773bafe32a4f1fc5d9",
  "result": {
    "markdown": "---\ntitle: \"Categorical Variables Recap and Some Ethics...\"\nsubtitle: \"STAT 313\"\nformat: \n  revealjs:\n    embed-resources: true\n    standalone: true\neditor: visual\n---\n\n\n\n\n##  {background-color=\"#D4D4D4\"}\n\n<center>\n\n::: {style=\"margin-top: 100px; font-size: 3em; color: #000000;\"}\nWhat are the two data types R stores categorical variables as?\n:::\n\n</center>\n\n## `dplyr` -- a tool bag for data wrangling\n\n::: columns\n::: {.column width=\"40%\"}\n![](images/dplyr.png)\n:::\n\n::: {.column width=\"5%\"}\n:::\n\n::: {.column width=\"55%\"}\n`filter()`\n\n`select()`\n\n`mutate()`\n\n`summarize()`\n\n`arrange()`\n\n`group_by()`\n:::\n:::\n\n## \n\n::: columns\n::: {.column width=\"55\"}\n::: {style=\"font-size: 1.5em;\"}\nThe Pipe `%>%`\n:::\n:::\n\n::: {.column width=\"15%\"}\n:::\n\n::: {.column width=\"15%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](images/pipe.png){width=120}\n:::\n:::\n\n:::\n\n::: {.column width=\"15%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](images/not_a_pipe.jpg){width=108}\n:::\n:::\n\n:::\n:::\n\n<center>![](images/pipe_process.png)</center>\n\n## \n\n::: {style=\"margin-top: 100px; font-size: 2em;\"}\nIf you wanted means for each level of a categorical variable, what would you do?\n:::\n\n## Trout Size\n\n::: {style=\"font-size: 0.75em;\"}\nThe HJ Andrews Experimental Forest houses one of the larges long-term ecological research stations, specifically researching cutthroat trout and salamanders in clear cut or old growth sections of Mack Creek.\n:::\n\n</br>\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\ntrout %>% \n  group_by(section) %>% \n  summarize(mean_length = mean(length_1_mm, na.rm = TRUE)\n            )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 Ã— 2\n  section                               mean_length\n  <chr>                                       <dbl>\n1 clear cut forest                             85.3\n2 upstream old growth coniferous forest        81.4\n```\n:::\n:::\n\n\n. . .\n\n</br>\n\n<center>\n\n::: {style=\"font-size: 0.75em;\"}\n**Why `na.rm = TRUE`?**\n:::\n\n</center>\n\n## Classifying Channel Types\n\n::: {style=\"font-size: 0.75em;\"}\nThe channels of the Mack Creek which were sampled were classified into the following groups:\n:::\n\n::: columns\n::: {.column width=\"15%\"}\n`\"C\"`\n\n`\"I\"`\n\n`\"IP\"`\n\n`\"P\"`\n\n`\"R\"`\n\n`\"S\"`\n\n`\"SC\"`\n\n`NA`\n:::\n\n::: {.column width=\"5%\"}\n:::\n\n::: {.column width=\"80%\"}\ncascade\n\nriffle\n\nisolated pool\n\npool\n\nrapid\n\nstep (small falls)\n\nside channel\n\nnot sampled by unit\n:::\n:::\n\n## `filter()`-ing Specific Channel Types\n\n::: {style=\"font-size: 0.9em;\"}\nThe majority of the Cutthroat trout were captured in cascades (C), pools (P), and side channels (SC). Suppose we want to only retain these levels of the `unittype` variable.\n:::\n\n. . .\n\n</br>\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\ntrout %>% \n  filter(unittype %in% c(\"C\", \"P\", \"SC\"))\n```\n:::\n\n\n. . .\n\n</br>\n\n::: callout-tip\n# `%in%`\n\nIf you filter includes *more than one value* you must use `%in%` **not** `==`!\n:::\n\n##  {background-color=\"#B6CADA\"}\n\n::: {style=\"font-size: 4em;\"}\nCategorical Variables for Whom?\n:::\n\n## \n\n::: {style=\"font-size: 1.25em;\"}\nSuppose Cal Poly is interested in summarizing the demographics of their undergraduate students. They have designed the following question asking about student's gender identity:\n:::\n\n</br>\n\n> What is your gender identity?\n>\n> Male, Female, Other\n\n. . .\n\n::: {style=\"font-size: 1.5em; color: #0F4C81\"}\nWho benefits from these options?\n\nWho suffers from these options?\n:::\n\n##  {background-color=\"D4D4D4\"}\n\n::: {style=\"font-size: 3em; color: #063970\"}\nData Feminism\n:::\n\n::: columns\n::: {.column width=\"55%\"}\n![](images/feminist.png)\n:::\n\n::: {.column width=\"5%\"}\n:::\n\n::: {.column width=\"40%\"}\n::: {style=\"font-size: 1.15em;\"}\n-   Data science by whom?\n\n-   Data science for whom?\n\n-   Data sets about whom?\n\n-   Data science with whose values?\n:::\n:::\n:::\n\n## \n\n::: columns\n::: {.column width=\"60%\"}\n![](images/principles_data_feminism.PNG)\n:::\n\n::: {.column width=\"5%\"}\n:::\n\n::: {.column width=\"35%\"}\n![](images/data_feminism_book.jpg)\n:::\n:::\n\n## \n\n::: {style=\"font-size: 3em;\"}\nRethink binaries\n:::\n\n. . .\n\n</br> </br>\n\n<center>\n\n::: {style=\"font-size: 1.25em; color: #0F4C81\"}\nHow would you redesign the survey question about student's gender identity?\n:::\n\n## \n\n::: {style=\"font-size: 3em;\"}\nChallenge power\n:::\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](images/data_file.PNG){width=60% height=30%}\n:::\n:::\n\n\n## \n\n::: {style=\"font-size: 2.5em;\"}\nAn aura objectivity\n:::\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](images/active_shooters.PNG){width=40% height=20%}\n:::\n:::\n\n\n::: {style=\"font-size: 0.75em;\"}\n> \"We focus on four conventions which imbue visualizations with a sense of objectivity, transparency and facticity. These include: (a) two-dimensional viewpoints, (b) clean layouts, (c) geometric shapes and lines, (d) the inclusion of data sources.\"\n>\n> *The work that visualization communications do*\n:::\n\n## \n\n::: {style=\"font-size: 3em;\"}\nElevate emotion\n:::\n\n<https://guns.periscopic.com/>\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
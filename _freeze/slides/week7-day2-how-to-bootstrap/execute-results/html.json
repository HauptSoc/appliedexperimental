{
  "hash": "159741122fbe49c4d31d271441a0f9d7",
  "result": {
    "markdown": "---\ntitle: \"How do you bootstrap???\"\nformat: revealjs\neditor: visual\n---\n\n::: {.cell}\n\n:::\n\n\n::: {style=\"font-size: 2em; color: #000000;\"}\nUsing bootstrap resamples to generate a confidence interval\n:::\n\n. . .\n\nFrom your original sample, resample with replacement the same number of times as your original sample.\n\n. . .\n\n<center>\n\n::: {style=\"font-size: 1em; color: #0F4C81;\"}\nThis is your bootstrap resample.\n:::\n\n</center>\n\n. . .\n\nRepeat this process many, many times.\n\n. . .\n\nCalculate a numerical summary (e.g., mean, median) for each bootstrap resample.\n\n<center>\n\n::: {style=\"font-size: 1em; color: #0F4C81;\"}\nThese are your bootstrap statistics\n:::\n\n</center>\n\n## \n\n::: {style=\"font-size: 2em; color: #000000;\"}\nBootstrap Distribution\n:::\n\n. . .\n\n> *definition*: a distribution of the **bootstrap statistics** from every **bootstrap resample**\n\n. . .\n\n</br>\n\nDisplays the variability in the statistic that could have happened with repeated sampling.\n\n. . .\n\n::: {style=\"font-size: 1em; color: #0F4C81;\"}\nApproximates the true sampling distribution!\n:::\n\n##  {background-color=\"#B6CADA\"}\n\n\n::: {.cell}\n\n:::\n\n\n::: {style=\"font-size: 2em; color: #000000;\"}\nPenguins!\n:::\n\n::: columns\n::: {.column width=\"45%\"}\n![](images/adelie_penguin.jpg)\n:::\n\n::: {.column width=\"5%\"}\n:::\n\n::: {.column width=\"45%\"}\n![](images/chinstrap_penguin.jpeg)\n:::\n:::\n\n## \n\n::: {style=\"font-size: 2em; color: #000000;\"}\nStatistic: $\\beta_1$\n:::\n\n::: columns\n::: {.column width=\"70%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](week7-day2-how-to-bootstrap_files/figure-revealjs/scatterplot-1.png){width=960}\n:::\n:::\n\n:::\n\n::: {.column width=\"5%\"}\n:::\n\n::: {.column width=\"25%\"}\nThe relationship between penguin's bill length and body mass for **all** penguins in the Palmer Archipelago\n:::\n:::\n\n## \n\n::: {style=\"font-size: 2em; color: #000000;\"}\nGenerating a bootstrap resample\n:::\n\n. . .\n\n**Step 1:** `specify()` your response and explanatory variables\n\n. . .\n\n**Step 2:** `generate()` bootstrap resamples\n\n. . .\n\n**Step 3:** `calculate()` the statistic of interest\n\n## \n\n::: {style=\"font-size: 2em; color: #000000;\"}\nDeclare your variables!\n:::\n\n![](images/specify_scatterplot.jpg)\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|2\"}\npenguins %>% \n  specify(response = bill_length_mm, explanatory = body_mass_g)\n```\n:::\n\n\n## \n\n::: {style=\"font-size: 2em; color: #000000;\"}\nGenerate your resamples!\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|4\"}\npenguins %>% \n  specify(response = bill_length_mm, \n          explanatory = body_mass_g) %>% \n  generate(reps = 500, type = \"bootstrap\")\n```\n:::\n\n\n</br>\n\n. . .\n\n`reps` -- the number of resamples you want to generate\n\n`\"bootstrap\"` -- the method that should be used to generate the new samples\n\n## \n\n::: {style=\"font-size: 2em; color: #000000;\"}\nCalculate your statistics!\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|6\"}\npenguins %>% \n  specify(response = bill_length_mm, \n          explanatory = body_mass_g) %>% \n  generate(reps = 500, \n           type = \"bootstrap\") %>% \n  calculate(stat = \"slope\")\n```\n:::\n\n\n</br>\n\n. . .\n\n`\"slope\"` -- the `stat`istic of interest\n\n##  {background-color=\"#B6CADA\"}\n\n::: {style=\"font-size: 2em; color: #000000;\"}\nThe final product\n:::\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nvisualize(bootstrap) + \n  labs(title = \"Bootstrap Distribution of 500 reps\", \n       x = \"Slope Statistic\")\n```\n\n::: {.cell-output-display}\n![](week7-day2-how-to-bootstrap_files/figure-revealjs/bootstrap-viz-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n## \n\n::: {style=\"font-size: 2em; color: #000000;\"}\nA plausible range of values for: $\\beta_1$\n:::\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](week7-day2-how-to-bootstrap_files/figure-revealjs/ci-viz-1.png){width=960}\n:::\n:::\n\n\n## \n\n::: {style=\"font-size: 2em; color: #000000;\"}\nThe 95% confidence interval is...\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nget_confidence_interval(bootstrap, \n                        level = 0.95, \n                        type = \"percentile\")\n```\n:::\n\n\n</br>\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> Lower Bound </th>\n   <th style=\"text-align:right;\"> Upper Bound </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 0.0035 </td>\n   <td style=\"text-align:right;\"> 0.00452 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n",
    "supporting": [
      "week7-day2-how-to-bootstrap_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}